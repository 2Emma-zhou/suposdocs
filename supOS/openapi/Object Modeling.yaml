---
openapi: 3.0.0
info:
  title: Data Modeling
  description: |-
    # Authentication

    <!-- ReDoc-Inject: <security-definitions> -->
  version:
servers:
- url: /open-api/supos/oodm
security:
- Sign: []
# tags:
# - name: Tags
#   description: Label
# - name: Template
#   description: Template
# - name: Instance
#   description: Instance
# - name: Relation
#   description: Relation
# - name: Attribute
#   description: Attribute
# - name: Event
#   description: Event
# - name: Subscription
#   description: Subscription
# - name: network
#   description: Network
# - name: Series Data Function
#   description: Series Data Function
# - name: Alarm
#   description: Alarm
# - name: Historical Alarm
#   description: Page for alarm information configured for a given position. This interface is used to query the list and details of historical alarm records.
# - name: app
#   description: App Information
# - name: Model Import/Export
#   description: Import/export templates/instances/function collections/attributes/events/services/subscriptions/alarms based on the appId
paths:
  /v2/alert/current:
    get:
      tags:
      - runtime function
      summary: Query Real-time Alarms
      description: "When pagination parameters are provided, the response format of the API will change. The schema name will be PaginatedAlerts. See Object Modeling Guide for details."
      operationId: queryRealTimeAlert
      parameters:
      - name: keyWord
        in: query
        description: "Object name/alias or object property name/alias (fuzzy match), e.g., o1"
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: o1
      - name: priority
        in: query
        description: "Priority, e.g., 4"
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: "4"
      - name: limitValue
        in: query
        description: "Limit value (target value of the alarm condition operator; for numerical attributes, provide a number; for boolean attributes, provide true/false)"
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: "11"
      - name: pageIndex
        in: query
        description: "Page index (default is 1), e.g., 1. Must be used together with pageSize; otherwise, no pagination effect will occur, and all data will be returned."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 1
        example: 1
      - name: pageSize
        in: query
        description: "Number of items per page, maximum value is 200. Must be used together with pageIndex; otherwise, no pagination effect will occur, and all data will be returned."
        required: false
        style: form
        explode: true
        schema:
          maximum: 200
          type: integer
          format: int32
          example: 200
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
        "500":
          description: Common internal error in OODM
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultError'
  /v2/attributes/current:
    put:
      tags:
      - runtime function
      summary: Set Real-time Values
      description: "Set real-time values for multiple physical template instances, with a maximum of 1000 items per batch."
      operationId: setVqts
      requestBody:
        description: Set real-time values
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/RealTimeValue'
        required: true
      responses:
        "200":
          description: OK
          content: {}
        "400":
          description: |
            Error information
            * 10001009 Template does not exist {"code":10001009, "message":"TEMPLATE:system.xx not found.", "data": null}
            * 10001009 Instance does not exist {"code":10001009, "message":"INSTANCE:xx not found.", "data": null}
            * 10001009 Attribute does not exist {"code":10001009, "message":"ATTRIBUTE:system.xx not found.", "data": null}
            * 10001010 Setting values exceeds 1000 {"code":10001010, "message":"operation not support: Setting values exceeds 1000.", "data": null}
            * 10001013 Incorrect dateTime value format {"code":10001013, "message":"dateTime 2021-04-06 16:00:00.000 is invalid: The value of dateTime should comply with RFC 3339 standard, e.g., yyyy-MM-dd'T'HH:mm:ss.SSSZ, for example: 2021-04-06T16:00:00.000+08:00 (+08:00 represents the time zone offset).", "data": null}
            * 10001013 Attribute value cannot be converted to the corresponding type {"code":10001013, "message":"propValue xxx is invalid: The value of system.aaa.Instance_9.system.p2 should be true or false.", "data": null}
            * 10001013 Incorrect format of attribute full path {"code":10001013, "message":"attributeFullPath Instance_9.system.p2.xx is invalid: Incorrect format of attribute full path, it should be instanceAlias.attributeNamespace.attributeAlias or templateNamespace.templateAlias.instanceAlias.attributeNamespace.attributeAlias.", "data": null}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
  /v2/attribute/current:
    post:
      tags:
      - runtime function
      summary: Query Real-time Data of Object attributes
      operationId: queryAttributeRealTime
      requestBody:
        description: The function supports a maximum of 1000 attribute. Collection of TemplateNamespace.TemplateAlias.InstanceAlias.AttributeNamespace.AttributeAlias
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RealTimeDataQuery'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultMapVQT'
        "500":
          description: OODM general internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultError'
      x-codegen-request-body-name: dto
  /v2/attribute/histories:
    post:
      tags:
      - runtime function
      summary: Query Historical Data of Object Attributes
      operationId: queryAttributeHistories
      requestBody:
        description: dto
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HistoryQuery'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultHistoryDetail'
        "500":
          description: OODM general internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultError'
      x-codegen-request-body-name: dto
  /v2/attribute/unit/list:
    get:
      tags:
      - attribute
      summary: Get a List of Attribute Units
      operationId: listAttributeUnit
      parameters:
      - name: type
        in: query
        description: "Type, all is all, visible is visible, e.g., visible"
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: visible
      - name: keyword
        in: query
        description: "Keyword, fuzzy match by name, e.g., g"
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: g
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultListUnit'
        "500":
          description: OODM general internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultError'
  /v2/attributes:
    get:
      tags:
      - attribute
      summary: Query All Attributes Based on the Search Criteria
      description: "Interface usage scenario description- Comprehensive attribute search interface for complex filtering queries on attributes. <br/>
      For example, query attributes bound to system.label2 under instance i1, not belonging to app test, and also return attribute values. <br/>
      The required parameters are instanceNames=i1&labelFullNames=system.label2&excludeAppIds=true&appIds=test&needValue=true"
      operationId: attributeSearch
      parameters:
      - name: hasBindRelation
        in: query
        description: Whether there is a binding relationship
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: withBindRelation
        in: query
        description: Control whether the queried attribute information includes binding relationships (attributeBindRelation field). Effective from supOS V4.01.00.00 version.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
        example: false
      - name: historical
        in: query
        description: Whether to have historical storage
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: displayable
        in: query
        description: Whether it is the main display field
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: needValue
        in: query
        description: "Whether to need attribute value (controls the 'value' field in the response. When set to true, 'value' returns the value of the attribute; when set to false, 'value' is always null. Default is false). This parameter needs to be used in conjunction with the 'instanceNames' parameter. If the queried attribute is a template attribute and is shared by multiple instances in the 'instanceNames' parameter, the 'value' field will take the last instance in the 'instanceNames' list that has this template attribute. This field is invalid when 'instanceNames' is empty."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
        example: false
      - name: needInstanceInfo
        in: query
        description: "Whether to need instance name aliases (controls the 'instanceEnName' and 'instanceDisplayName' fields in the response. When set to true, these fields are included and can be used for instance name information; when set to false, 'instanceEnName' and 'instanceDisplayName' are not returned. Default is false). This parameter needs to be used in conjunction with the 'instanceNames' parameter. If the queried attribute is a template attribute and is shared by multiple instances in the 'instanceNames' parameter, the 'instanceEnName' and 'instanceDisplayName' fields will take the last instance in the 'instanceNames' list that has this template attribute. This field is invalid when 'instanceNames' is empty."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
        example: false
      - name: excludeLabelFullNames
        in: query
        description: Query data that do not have the specified labels. This parameter needs to be used in conjunction with 'labelFullNames'. This field is invalid when 'labelFullNames' is empty.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
        example: false
      - name: excludeAppNames
        in: query
        description: "This field is named incorrectly and has been deprecated. Please use the 'excludeAppIds' field instead. This field is still valid in the current version, and its functionality and usage are the same as 'excludeAppIds'."
        required: false
        deprecated: true
        style: form
        explode: true
        schema:
          type: boolean
          default: false
        example: false
      - name: excludeAppIds
        in: query
        description: Query data that does not belong to the specified app. This parameter needs to be used in conjunction with 'appIds'. This field is invalid when 'appIds' is empty.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
        example: false
      - name: containsInheritedMetadata
        in: query
        description: Whether to include inherited metadata. This parameter needs to be used with the specified template or instance. This field is invalid when both 'instanceNames' and 'templateFullNames' are empty.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: true
        example: true
      - name: containsSelfMetadata
        in: query
        description: Whether to include self metadata. This parameter needs to be used with the specified template or instance. This field is invalid when both 'instanceNames' and 'templateFullNames' are empty.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: true
        example: true
      - name: needKnowAlarm
        in: query
        description: "Whether to retrieve information about the presence of alarms. If set to true, the 'existAlarm' field will be valid in the response."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
        example: false
      - name: dataTypes
        in: query
        description: |
          属性类型,如：INTEGER
            * BOOLEAN Boolean type
            * STRING  String type
            * INTEGER Integer type
            * LONG    Long type
            * FLOAT   Float type
            * DOUBLE  Double type
            * DECIMAL Decimal type
            * FILE    File type
            * DATE    Date type
            * DATETIME Long date type
            * OBJECT  Object type for primary-foreign key relationships
            * SYSTEMCODE System code
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            example: INTEGER
            enum:
            - BOOLEAN
            - STRING
            - INTEGER
            - LONG
            - FLOAT
            - DOUBLE
            - DECIMAL
            - FILE
            - DATE
            - DATETIME
            - OBJECT
            - SYSTEMCODE
      - name: filterNames
        in: query
        description: "Filter attribute aliases, such as enName"
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            example: enName
      - name: filterNamespace
        in: query
        description: "Filter namespace (used in combination with filter attribute aliases), such as system"
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: system
      - name: keyword
        in: query
        description: "Keyword for fuzzy matching of name aliases, such as, Zhang"
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: Zhang
      - name: pageIndex
        in: query
        description: "Page number (default is 1), such as 1"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 1
        example: 1
      - name: pageSize
        in: query
        description: "Number of data entries per page, maximum limit is 500 (default is 20), such as 20"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 20
        example: 20
      - name: namespaces
        in: query
        description: "Namespaces, such as system"
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            example: system
      - name: labelFullNames
        in: query
        description: "Label namespace and alias list, such as system.label1"
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            example: system.label1
      - name: appNames
        in: query
        description: "This field is named incorrectly and has been deprecated. Please use the 'appIds' field instead. This field is still valid in the current version, and its functionality and usage are the same as 'appIds'."
        required: false
        deprecated: true
        style: form
        explode: true
        schema:
          type: array
          items:
            maxLength: 128
            type: string
            example: App_bac090d688004de9bf927b9ff66bfca7
      - name: appIds
        in: query
        description: Specify the appId to query the attributes
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            maxLength: 128
            type: string
            example: App_bac090d688004de9bf927b9ff66bfca7
      - name: instanceNames
        in: query
        description: "List of instance aliases to which the metadata belongs (priority item, when this field is provided, 'templateNames' is ignored), such as instance1"
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            example: instance1
      - name: sourceFunctionSetFullNames
        in: query
        description: "List of source function set namespaces and aliases, such as system.f1"
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            example: system.f1
      - name: templateFullNames
        in: query
        description: "List of template namespaces and aliases to which the metadata belongs, such as system.t1"
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            example: system.t1
      - name: functionSetFullNames
        in: query
        description: "List of function set namespaces and aliases to which the metadata belongs, such as system.f2"
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            example: system.f2
      responses:
        "200":
          description: Response content if the object is found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedInstanceBriefAttribute'
        "400":
          description: OODM general interior error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultError'
  /v2/instance/attributes:
    get:
      tags:
      - attribute
      summary: Get Detailed Information about Instance Attributes Based on Attribute Namespace Aliases
      description: "Get the specified instance attributes. If they do not exist, they will not be returned. Supports a maximum of 100 attributes."
      operationId: listInstanceAttributes
      parameters:
      - name: instanceAttributes
        in: query
        description: "Instance attribute aliases in the format of instance alias.namespace alias.attribute alias, such as instance1.system.t1"
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            example: instance1.system.t1
      responses:
        "200":
          description: Returns a list of detailed instance attribute information if successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultInstanceAttribute'
              example:
                code: 200
                message: ok
                data:
                - enName: p1
                  displayName: p1
                  dataType: BOOLEAN
                  unique: false
                  readWriteMode: READ_WRITE
                  persistent: false
                  historical: false
                  display: false
                  hasKeyRelation: false
                  id: 14811
                  templateId: 14810
                  labelIds: []
                  namespace: system
                  templateName: hss1
                  templateNamespace: system
                  instanceEnName: testInstance1
                  instanceDisplayName: testInstance1
                  editable: true
                  deletable: true
        "400":
          description: |
            Error information
              * 10001013 Parameter does not conform to the specification: Parameter format should be instance alias.namespace alias.attribute alias
              * 10001013 Parameter does not conform to the specification: Number of parameters exceeds the maximum limit
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultError'
              example:
                code: 10001013
                message: "Incorrect format for the instanceAttributes parameter, should be instance alias.namespace alias.attribute alias."
                detail: string
  /v2/model-label-types:
    get:
      tags:
      - label
      summary: Search Label Category List
      operationId: searchCategories
      parameters:
      - name: keyword
        in: query
        description: "Keyword for fuzzy matching of name or alias, e.g., xx"
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: xx
      - name: pageIndex
        in: query
        description: "Page number, e.g., 1"
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 1
      - name: pageSize
        in: query
        description: "Number of data items per page, maximum limit is 500, e.g., 20"
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 20
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultPaginatedLabelCategoryDetail'
        "500":
          description: OODM general internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultError'
    post:
      tags:
      - label
      summary: Create Label Category
      operationId: createCategory
      requestBody:
        description: createLabelCategoryDto
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LabelCategoryForCreating'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultLong'
        "500":
          description: OODM general internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultError'
      x-codegen-request-body-name: createLabelCategoryDto
  /v2/model-label-types/{namespace}/{name}:
    get:
      tags:
      - label
      summary: Get Label/Category
      operationId: getLabelCategory
      parameters:
      - name: namespace
        in: path
        description: "Label namespace, e.g., system"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: system
      - name: name
        in: path
        description: "Label alias, e.g., label1"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: label1
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultLabelDetail'
        "500":
          description: OODM general internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultError'
  /v2/model-labels:
    get:
      tags:
      - label
      summary: Search All Labels
      operationId: searchLabels
      parameters:
      - name: keyword
        in: query
        description: "Keyword for fuzzy matching of name or alias, e.g., xx"
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: xx
      - name: pageIndex
        in: query
        description: "Page number, e.g., 1"
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 1
      - name: pageSize
        in: query
        description: "Number of data items per page, maximum limit is 500, e.g., 20"
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 20
      - name: categoryId
        in: query
        description: "Category ID, e.g., 402"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          example: 402
      - name: metadataType
        in: query
        description: "Metadata type \n(restricts all labels marked with this metadata type, used in conjunction with specified template or instance), e.g., ATTRIBUTE\n  * ATTRIBUTE Attribute\n  * EVENT Event\n  * SERVICE Service\n  * SUBSCRIPTION Subscription\n"
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: ATTRIBUTE
          enum:
          - ATTRIBUTE
          - EVENT
          - SERVICE
          - SUBSCRIPTION
      - name: excludeMetadata
        in: query
        description: "Excludes all labels marked with metadata, used in conjunction with metadataType. This field is invalid when metadataType is empty."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          example: false
          default: false
      - name: templateName
        in: query
        description: "Template alias. This parameter needs to be passed in conjunction with the templateNamespace parameter; otherwise, the template cannot be queried. This field is invalid when metadataType is empty."
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: t1
      - name: templateNamespace
        in: query
        description: "Template namespace. This parameter needs to be passed in conjunction with the templateName parameter; otherwise, the template cannot be queried. This field is invalid when metadataType is empty."
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: system
      - name: instanceName
        in: query
        description: Instance alias. This parameter needs to be used in conjunction with metadataType. This field is invalid when metadataType is empty.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: instance1
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultPaginatedLabelDetail'
        "500":
          description: OODM general internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultError'
    post:
      tags:
      - label
      summary: Labels
      operationId: createLabel
      requestBody:
        description: createLabelDto
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LabelForCreating'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultLong'
        "500":
          description: OODM general internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultError'
      x-codegen-request-body-name: createLabelDto
  /v2/model-labels/{templateNamespace}/{templateName}/instance-labels:
    post:
      tags:
      - label
      summary: Unbind Labels from Instance
      operationId: unbindLabelsOfInstance
      parameters:
      - name: templateNamespace
        in: path
        description: "Template namespace, e.g., system"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: system
      - name: templateName
        in: path
        description: "Template alias, e.g., t1"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: t1
      requestBody:
        description: dto
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstanceNamesLabelForUnbinding'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultSuccessSimple'
              example:
                code: 200
                message: ok
        "500":
          description: OODM general internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultError'
      x-codegen-request-body-name: dto
  /v2/model-labels/{templateNamespace}/{templateName}/{instanceName}/instance-labels:
    post:
      tags:
      - label
      summary: Bind Labels to Instance
      operationId: bindLabelsToInstance
      parameters:
      - name: templateNamespace
        in: path
        description: "Template namespace, e.g., system"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: system
      - name: templateName
        in: path
        description: "Template alias, e.g., t1"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: t1
      - name: instanceName
        in: path
        description: "Instance alias, e.g., instance1"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: instance1
      requestBody:
        description: dto
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstanceLabelForBinding'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultSuccessSimple'
              example:
                code: 200
                message: ok
        "500":
          description: OODM general internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultError'
      x-codegen-request-body-name: dto
  /v2/networks:
    get:
      tags:
      - network
      summary: List Networks
      operationId: listNetwork
      parameters:
      - name: keyword
        in: query
        description: "Keyword for fuzzy matching of name or alias, e.g., n1"
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: n1
      - name: pageIndex
        in: query
        description: "Page number, e.g., 2"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 2
          default: 1
      - name: pageSize
        in: query
        description: "Number of data items per page, maximum limit is 500, e.g., 10"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 10
          default: 20
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultPaginatedNetworkDetail'
        "500":
          description: OODM general interal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultError'
    post:
      tags:
      - network
      summary: Create Network
      operationId: createNetwork
      requestBody:
        description: dto
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkForCreating'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultLong'
        "500":
          description: OODM general interal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultError'
      x-codegen-request-body-name: dto
  /v2/networks/{networkName}:
    put:
      tags:
      - network
      summary: Update Network
      operationId: updateNetwork
      parameters:
      - name: networkName
        in: path
        description: "Network alias, e.g., n1"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: n1
      requestBody:
        description: dto
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkForUpdating'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultSuccessSimple'
              example:
                code: 200
                message: ok
        "500":
          description: OODM general internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultError'
      x-codegen-request-body-name: dto
    delete:
      tags:
      - network
      summary: Delete Network
      operationId: deleteNetwork
      parameters:
      - name: networkName
        in: path
        description: "Network alias, e.g., n1"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultSuccessSimple'
              example:
                code: 200
                message: ok
        "500":
          description: OODM general internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultError'
  /v2/networks/{networkName}/nodes:
    post:
      tags:
      - network
      summary: Create Network Node
      operationId: createNetworkNode
      parameters:
      - name: networkName
        in: path
        description: "Network alias, e.g., n1"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: n1
      requestBody:
        description: dto
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkNodeForCreating'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultLong'
        "500":
          description: OODM general internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultError'
      x-codegen-request-body-name: dto
  /v2/networks/{networkName}/nodes/{nodeId}:
    get:
      tags:
      - network
      summary: Get Subtree of Current Node
      operationId: getNetworkTreeNodeByNodeId
      parameters:
      - name: networkName
        in: path
        description: "Network alias, e.g., n1"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: n1
      - name: nodeId
        in: path
        description: "Node ID, e.g., 12222"
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
          example: 12222
      - name: needParent
        in: query
        description: "Whether to include parent node, e.g., true"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          example: true
          default: false
      - name: excludeTemplateName
        in: query
        description: "exclude template name, e.g., t1"
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            example: t1
      - name: deep
        in: query
        description: "Query depth, how many layers of byte point queries, e.g., 1"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 1
          default: -1
      - name: needAttributeValue
        in: query
        description: "Whehter to need attribute value,(set within the content), e.g., true"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          example: true
          default: false
      - name: needLabels
        in: query
        description: "whether to need labels, e.g., true"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          example: true
          default: false
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultNetworkNodeTreeDetail'
        "500":
          description: OODM general interal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultError'
    put:
      tags:
      - network
      summary: Update Network Node
      operationId: updateNetworkNode
      parameters:
      - name: networkName
        in: path
        description: "Network alias, e.g., n1"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: n1
      - name: nodeId
        in: path
        description: "Node ID, e.g., 12222"
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
          example: 12222
      requestBody:
        description: dto
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkNodeForUpdating'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultSuccessSimple'
              example:
                code: 200
                message: ok
        "500":
          description: OODM general internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultError'
      x-codegen-request-body-name: dto
    delete:
      tags:
      - network
      summary: Recursive Delete Network Node
      operationId: recursiveDeleteNetworkNode
      parameters:
      - name: networkName
        in: path
        description: "Network alias, e.g., n1"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: n1
      - name: nodeId
        in: path
        description: "Node ID, e.g., 12222"
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
          example: 12222
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultSuccessSimple'
              example:
                code: 200
                message: ok
        "500":
          description: OODM general internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultError'
  /v2/networks/{networkName}/tree:
    get:
      tags:
      - network
      summary: Get Network Tree Node
      operationId: getNetworkTreeNode
      parameters:
      - name: networkName
        in: path
        description: "Network alias, e.g., n1"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: n1
      - name: excludeTemplateName
        in: query
        description: "Exclude specified template, e.g., t1"
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            example: t1
      - name: deep
        in: query
        description: "Query depth, i.e., how many layers of child nodes to query, e.g., -1"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: -1
          default: -1
      - name: needLabels
        in: query
        description: "Whether to need labels, e.g., true"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          example: true
          default: false
      - name: needAttributeValue
        in: query
        description: "Whether to include attribute values (set in content), e.g., true"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          example: true
          default: false
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultNetworkNodeTreeDetail'
        "500":
          description: OODM general internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultError'
  /v2/template:
    post:
      tags:
      - template
      summary: Create Template
      operationId: createTemplate
      requestBody:
        description: dto
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WholeNormalTemplateDtoForCreating'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultLong'
        "500":
          description: OODM general internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultError'
      x-codegen-request-body-name: dto
  /v2/template/listByAppName:
    get:
      tags:
      - template
      summary: Get All Templates under an App
      description: "The URL of this API is named incorrectly and has been deprecated. Please use the /v2/appIds/{appId}/templates API. The current version is still valid and has the same functionality as /v2/appIds/{appId}/templates."
      operationId: listByAppName
      parameters:
      - name: appName
        in: query
        description: "App name, e.g., system"
        required: true
        style: form
        explode: true
        schema:
          maxLength: 128
          type: string
          example: system
      - name: pageIndex
        in: query
        description: "Page number, e.g., 1"
        required: true
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
          example: 1
      - name: pageSize
        in: query
        description: "Number of data entries per page, maximum of 500, e.g., 20"
        required: true
        style: form
        explode: true
        schema:
          maximum: 500
          type: integer
          format: int32
          example: 20
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultPaginatedDisplayTemplate'
        "500":
          description: OODM general internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultError'
      deprecated: true
  /v2/appIds/{appId}/templates:
    get:
      tags:
      - app
      summary: List by AppId
      operationId: listByAppId
      parameters:
      - name: appId
        in: path
        description: ID of the app to which the templates belongs
        required: true
        style: simple
        explode: false
        schema:
          maxLength: 128
          type: string
          example: system
      - name: pageIndex
        in: query
        description: "Page number, e.g., 1"
        required: true
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
          example: 1
      - name: pageSize
        in: query
        description: "Number of data entries per page, maximum of 500, e.g., 20"
        required: true
        style: form
        explode: true
        schema:
          maximum: 500
          type: integer
          format: int32
          example: 20
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisplayTemplateWithPagination'
        "400":
          description: |
            Error Information
            * 10001013 Invalid input parameter, e.g.: {"code":10001013, "message":"Page number:-1 does not comply with the rules: must be greater than or equal to 1.", "data": null}
            * 10001013  Invalid input parameter, e.g.: {"code":10001013, "message":"Number of items per page:501 does not comply with the rules: must be less than or equal to 500.", "data": null}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400_1'
  /v2/template/listByLabel:
    get:
      tags:
      - template
      summary: Get All Templates under a Label
      operationId: listByLabelId
      parameters:
      - name: labelId
        in: query
        description: "Label ID, e.g., 12221"
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          example: 12221
      - name: templateTypes
        in: query
        description: |
          Template types, e.g.: ENTITY
            * ROOT Root template type
            * INTERNAL Internal template type
            * EXTERNAL External template type
            * RELATION Relation template type
            * ENTITY Entity template type
            * FORM   Form template type
            * REMOTE Remote template type
            * COLLECTOR  Collector template type
            * MAPPING  Mapping template type
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            example: ENTITY
            enum:
            - ROOT
            - INTERNAL
            - EXTERNAL
            - RELATION
            - ENTITY
            - FORM
            - REMOTE
            - COLLECTOR
            - MAPPING
      - name: pageIndex
        in: query
        description: "Page number, e.g., 1"
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 1
      - name: pageSize
        in: query
        description: "Number of items per page, maximum is 500, e.g., 20"
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 20
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultPaginatedDisplayTemplate'
        "500":
          description: OODM general internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultError'
  /v2/template/listByNames:
    post:
      tags:
      - template
      summary: Get Templates by Alias
      operationId: listByFullName
      requestBody:
        description: dto
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemplateNameWithNamespace'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultListDisplayTemplate'
        "500":
          description: OODM general internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultError'
      x-codegen-request-body-name: dto
  /v2/template/search:
    get:
      tags:
      - template
      summary: Search Templates
      operationId: search
      parameters:
      - name: labelIds
        in: query
        description: "labels, e.g., 12220"
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: integer
            format: int64
            example: 12220
      - name: namespaces
        in: query
        description: "Namespaces, e.g., system"
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            example: system
      - name: keyword
        in: query
        description: "Keyword for fuzzy matching alias names, e.g., 2"
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: mpl
      - name: pageIndex
        in: query
        description: Page index
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 2
          default: 1
      - name: pageSize
        in: query
        description: "Number of data entries per page, with a maximum of 500, e.g., 20"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 20
          default: 20
      - name: templateType
        in: query
        description: |
          Template type, e.g., ENTITY
            * ROOT Root template type
            * INTERNAL Internal template type
            * EXTERNAL External template type
            * RELATION Relationship template type
            * ENTITY Entity template type
            * FORM   Form template type
            * REMOTE Remote template type
            * COLLECTOR Collector template type
            * MAPPING Mapping template type
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: ENTITY
          enum:
          - ROOT
          - INTERNAL
          - EXTERNAL
          - RELATION
          - ENTITY
          - FORM
          - REMOTE
          - COLLECTOR
          - MAPPING
      - name: dataUsedBy
        in: query
        description: |
          Nature of data usage, e.g., USER
            * SYSTEM Metadata of the template is created by internal services
            * USER Metadata of the template is created by users
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: USER
          enum:
          - SYSTEM
          - USER
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultPaginatedTemplateIdTypeName'
        "500":
          description: OODM general internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultError'
  /v2/template/searchAppNamesOfTemplate:
    get:
      tags:
      - template
      summary: Search for All Apps Where Templates Belongs
      description: The URL of this API has a naming error and has been deprecated. Please use the /v2/appIds endpoint. The current version is still valid and has the same functionality as /v2/appIds.
      operationId: searchAppNamesOfTemplate
      parameters:
      - name: keyword
        in: query
        description: "Keyword for fuzzy matching app IDs, e.g., xx"
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: xx
      - name: pageIndex
        in: query
        description: "Page index, e.g., 1"
        required: true
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
          example: 1
      - name: pageSize
        in: query
        description: "Number of data entries per page, with a maximum of 500, e.g., 20"
        required: true
        style: form
        explode: true
        schema:
          maximum: 500
          type: integer
          format: int32
          example: 20
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultPaginatedAppId'
        "500":
          description: OODM general internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultError'
      deprecated: true
  /v2/appIds:
    get:
      tags:
      - app
      summary: Search for All App IDs
      operationId: searchAppIds
      parameters:
      - name: keyword
        in: query
        description: "Keyword for fuzzy matching app IDs, e.g., xx"
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: xx
      - name: parentFullName
        in: query
        description: "The full name of the parent class where the metadata belongs. For templates/function sets, the format is namespace.alias; for physical template instances, the format is alias."
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: system.t1
      - name: parentType
        in: query
        description: |
          The type of the parent class where the metadata belongs.
            * TEMPLATE Template
            * FUNCTIONSET Function set
            * INSTANCE Instance
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: TEMPLATE
      - name: metadataType
        in: query
        description: |
          The type of data query. When metadataType=INSTANCE/ATTRIBUTE/EVENT/SERVICE/SUBSCRIPTION, parentFullName and parentType are required; otherwise, parentFullName and parentType are ignored.
            * ATTRIBUTE Attribute
            * EVENT event
            * SERVICE service
            * SUBSCRIPTION subscription
            * TEMPLATE template
            * FUNCTIONSET functionset
            * INSTANCE instance
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: TEMPLATE
          default: TEMPLATE
          enum:
          - ATTRIBUTE
          - EVENT
          - SERVICE
          - SUBSCRIPTION
          - TEMPLATE
          - FUNCTIONSET
          - INSTANCE
      - name: pageIndex
        in: query
        description: "Page number, e.g., 1"
        required: true
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          format: int32
          example: 1
      - name: pageSize
        in: query
        description: "Number of data entries per page, maximum is 500, e.g., 20"
        required: true
        style: form
        explode: true
        schema:
          maximum: 500
          type: integer
          format: int32
          example: 20
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppIdWithPagination'
        "400":
          description: |
            Error messages
            * 10001013 Invalid input parameters, e.g.: {"code":10001013, "message":"Page number:-1 does not meet the requirements: must be greater than or equal to 1.", "data": null}
            * 10001013 Invalid input parameters, e.g.: {"code":10001013, "message":"Number of data entries per page:501 does not meet the requirements: must be less than or equal to 500.", "data": null}
            * 10001013  Invalid input parameters, e.g.: {"code":10001013, "message":"parentType:FUNCTIONSET does not meet the requirements: parentType must be TEMPLATE when querying all app IDs of an instance.", "data": null}
            * 10001013  Invalid input parameters, e.g.: {"code":10001013, "message":"parentType:ATTRIBUTE does not meet the requirements: parentType must be TEMPLATE, FUNCTIONSET, or INSTANCE.", "data": null}
            * 10001013  Invalid input parameters, e.g.: {"code":10001013, "message":"parentFullName:qwe does not meet the requirements: full name format must be namespace.alias.", "data": null}
            * 10001009 Instance not found, e.g.: {"code":10001009, "message":"Instance with alias:i1 not found.", "data": null}
            * 10001009 Template not found, e.g.: {"code":10001009, "message":"Template with full name (namespace.alias):system.t1 not found.", "data": null}
            * 10001009 Function set not found, e.g.: {"code":10001009, "message":"Function set with full name (namespace.alias):system.f1 not found.", "data": null}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400_2'
  /v2/template/{templateNamespace}/{templateName}:
    put:
      tags:
      - template
      summary: Update Template
      operationId: updateTemplate
      parameters:
      - name: templateNamespace
        in: path
        description: "Template namespace, e.g., system"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: system
      - name: templateName
        in: path
        description: "Template alias, e.g., t1"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: t1
      requestBody:
        description: dto
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemplateForUpdating'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultSuccessSimple'
              example:
                code: 200
                message: ok
        "500":
          description: OODM general internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultError'
      x-codegen-request-body-name: dto
    delete:
      tags:
      - template
      summary: Delete Template
      operationId: deleteTemplate
      parameters:
      - name: templateNamespace
        in: path
        description: "Template namespace, e.g., system"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: templateName
        in: path
        description: "Template alias, e.g., t1"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultSuccessSimple'
              example:
                code: 200
                message: ok
        "500":
          description: OODM general internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultError'
  /v2/template/{templateNamespace}/{templateName}/attribute:
    post:
      tags:
      - attribute
      summary: Create Template Attribute
      operationId: createTemplateAttribute
      parameters:
      - name: templateNamespace
        in: path
        description: "Template namespace, e.g., system"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: system
      - name: templateName
        in: path
        description: "Template alias, e.g., t1"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: t1
      requestBody:
        description: dto
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTemplateAttribute'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultLong'
        "500":
          description: OODM general internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultError'
      x-codegen-request-body-name: dto
  /v2/template/{templateNamespace}/{templateName}/attribute/self:
    get:
      tags:
      - attribute
      summary: List Template Self Attributes
      operationId: listTemplateSelfAttributes
      parameters:
      - name: templateNamespace
        in: path
        description: "template namespace, e.g., system"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: system
      - name: templateName
        in: path
        description: "Template alias, e.g., t1"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: t1
      - name: pageIndex
        in: query
        description: "Page number, e.g., 1"
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 1
      - name: pageSize
        in: query
        description: "Number of data entries per page, maximum 500, e.g., 20"
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 20
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultPaginatedDisplayBaseAttribute'
        "500":
          description: OODM general internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultError'
  /v2/template/{templateNamespace}/{templateName}/attribute/{attributeNamespace}/{attributeName}:
    put:
      tags:
      - attribute
      summary: Update Template Attribute
      operationId: updateTemplateAttribute
      parameters:
      - name: templateNamespace
        in: path
        description: "Template namespace, e.g., system"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: system
      - name: templateName
        in: path
        description: "Template alias, e.g., t1"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: t1
      - name: attributeNamespace
        in: path
        description: "Attribute namespace, e.g., system"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: system
      - name: attributeName
        in: path
        description: "Attribute alias, e.g., attribute1"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: attribute1
      requestBody:
        description: dto
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTemplateAttribute'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultSuccessSimple'
              example:
                code: 200
                message: ok
        "500":
          description: OODM general internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultError'
      x-codegen-request-body-name: dto
    delete:
      tags:
      - attribute
      summary: Delete Template Attribute
      operationId: deleteTemplateAttribute
      parameters:
      - name: templateNamespace
        in: path
        description: "Template namespace, e.g., system"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: system
      - name: templateName
        in: path
        description: "Template alias, e.g., t1"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: t1
      - name: attributeNamespace
        in: path
        description: "Attribute namespace, e.g., system"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: system
      - name: attributeName
        in: path
        description: "Attribute alias, e.g., attribute1"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: attribute1
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultSuccessSimple'
              example:
                code: 200
                message: ok
        "500":
          description: OODM general internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultError'
  /v2/template/{templateNamespace}/{templateName}/children:
    get:
      tags:
      - template
      summary: Get All Derived Templates
      operationId: listChildren
      parameters:
      - name: templateNamespace
        in: path
        description: "Namespace, e.g., system"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: system
      - name: templateName
        in: path
        description: "Template alias, e.g., t1"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: t1
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultListTemplateTreeNodeDetail'
        "500":
          description: OODM general internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultError'
  /v2/template/{templateNamespace}/{templateName}/entity/{instanceName}/attribute:
    post:
      tags:
      - attribute
      summary: Create Entity Instance Attribute
      operationId: createEntityInstanceAttribute
      parameters:
      - name: templateNamespace
        in: path
        description: "Template namespace, e.g., system"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: system
      - name: templateName
        in: path
        description: "Template alias, e.g., t1"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: t1
      - name: instanceName
        in: path
        description: "instance alias, e.g., instance1"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: instance1
      requestBody:
        description: createInstanceAttribute
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateInstanceAttribute'
            example:
              comment: This is a test attribute
              dataType: DOUBLE
              defaultValue: "666.1"
              displayName: p1
              enName: p22
              valueScale: 2
              historical: false
              persistent: true
              readWriteMode: READ_ONLY
              appAccessMode: PUBLIC
              appId: system
              namespace: system
              max: 100
              min: 0
              maxValue: 100.123
              minValue: 0.123
              unit: kg
              compress: true
              paramValue: "0.2"
              paramUnit: '%'
              maxRisingPeriod: 600
              labelIds:
              - 12333
              attributeBindRelation:
                bindType: EXPRESSION
                expressionBindRelation:
                  expression: PROP("system.t2.instance2.system.p1") + 1.1
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultLong'
        "400":
          description: |
            Error message
            * 10001009 Template does not exist. For example: {"code":10001009, "message":"Template with full name (namespace.alias): system.t1 not found", "data": null}
            * 10001009 Instance does not exist. For example: {"code":10001009, "message":"Instance with alias: i1 not found", "data": null}
            * 10001009 Attribute does not exist. For example: {"code":10001009, "message":"Attribute with full path: system.t1.i1.system.p1 not found", "data": null}
            * 10001010 Unsupported operation. For example: {"code":10001010, "message":"Unsupported operation: Cannot modify binding relationship for non-physical template or physical template instance attribute.", "data": null}
            * 10001012 Data duplication. For example: {"code":10001015, "message":"Alias [system.p1] is duplicated.", "data": null}
            * 10001013 Invalid input parameters. For example: {"code":10001013, "message":"startTime:2022-09-07T06:19:06 does not comply with the specification: the value of dateTime type should be in the format of YYYY-MM-DDThh:mm:ssZ.", "data": null}
            * 10001024 Expression syntax error. For example: {"code":10001024, "message":"Expression syntax error. Please check and execute again: Syntax error: illegal expression at 36, current token: [type='string',lexeme='$PROP',index=0].", "data": null}
            * 10001024 Expression syntax error. For example: {"code":10001024, "message":"Expression syntax error. Attribute: system.p1 output type does not match.", "data": null}
            * 10001025 Attribute self-binding. For example: {"code":10001025, "message":"Expression contains self-binding. Please do not include the current attribute in the expression calculation.", "data": null}
            * 90500001 Incorrect format of instance attribute in the expression. For example: {"code":90500001, "message":"Incorrect format for attribute SMObjectInfo(id=system.test, tenantId=null, attr=o1.systemi1). The correct format should be templateNamespace.templateName.instanceName.attributeNamespace.attributeName.", "data": null}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400_3'
  /v2/templates/{templateNamespace}/{templateName}/entities/{instanceName}/attributes:
    post:
      tags:
      - attribute
      summary: Batch Create Entity Instance Attributes
      description: Maximum 100 at a time
      operationId: batchCreateEntityInstanceAttribute
      parameters:
      - name: templateNamespace
        in: path
        description: "Template namespace, e.g., system"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: system
      - name: templateName
        in: path
        description: "Template alias, e.g., t1"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: t1
      - name: instanceName
        in: path
        description: "Instance alias, e.g., instance1"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: instance1
      requestBody:
        description: ListCreateInstanceAttribute
        content:
          application/json:
            schema:
              maxItems: 100
              type: array
              items:
                $ref: '#/components/schemas/CreateInstanceAttribute'
            example:
            - comment: This is a test attribute
              dataType: LONG
              defaultValue: "666"
              displayName: p1
              enName: p22
              historical: false
              persistent: false
              readWriteMode: READ_ONLY
              appAccessMode: PUBLIC
              appId: system
              namespace: system
              max: 100
              min: 0
              maxValue: 100.5
              minValue: 0.5
              unit: kg
              compress: true
              paramValue: "0.2"
              paramUnit: '%'
              maxRisingPeriod: 600
              labelIds:
              - 12333
              attributeBindRelation:
                bindType: STATISTIC_ABSOLUTE
                statisticBindRelation:
                  enableMarkPeriod: true
                  endTime: 2022-09-11T00:41:20Z
                  insValueType: START_TIME
                  markPeriodType: DELAY
                  markPeriodValue: 1
                  sourceAttributeFullPath: system.t1.i1.system.p1
                  startTime: 2022-09-10T00:41:15Z
                  statisticFunction: INS
                  statisticPeriod: 1
                  statisticPeriodUnit: MINUTE
        required: true
      responses:
        "200":
          description: OK
          content: {}
        "400":
          description: |
            Error message
            * 10001009 Template does not exist. Example: {"code":10001009, "message":"Full name(namespace.alias): system.t1 corresponding to the template was not found", "data": null}
            * 10001009  Instance does not exist. Example: {"code":10001009, "message":"Alias:i1 corresponding to the instance was not found", "data": null}
            * 10001009 Attribute does not exist. Example: {"code":10001009, "message":"Full path: system.t1.i1.system.p1 corresponding to the attribute was not found", "data": null}
            * 10001010 Unsupported operation. Example: {"code":10001010, "message":"Unsupported operation: Non-physical template or physical template instance attribute cannot be modified binding relationship", "data": null}
            * 10001012 Data duplication. Example: {"code":10001015, "message":"Alias [system.p1] is duplicated", "data": null}
            * 10001013 Invalid input parameters. Example: {"code":10001013, "message":"startTime:2022-09-07T06:19:06 does not comply with the specification: The value of dateTime type should be in the format of YYYY-MM-DDThh:mm:ssZ.", "data": null}
            * 10001024 Expression syntax error. Example: {"code":10001024, "message":"Syntax error in the expression, please check and modify it: Syntax error: illegal expression at 36, current token: [type='string', lexeme='$PROP', index=0].", "data": null}
            * 10001024 Expression syntax error. Example: {"code":10001024, "message":"Expression syntax error, output type of the property: system.p1 does not match", "data": null}
            * 10001025 Attribute self-binding. Example: {"code":10001025, "message":"Expression binds to itself, please do not include the current attribute in the expression calculation.", "data": null}
            * 90500001  Incorrect format of instance attribute in the expression. Example: {"code":90500001, "message":"Attribute SMObjectInfo(id=system.test, tenantId=null, attr=o1.systemi1) format is incorrect, it should be template namespace.template alias.instance alias.attribute namespace.attribute alias.", "data": null}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400_4'
  /v2/template/{templateNamespace}/{templateName}/entity/{instanceName}/attribute/{attributeNamespace}/{attributeName}:
    put:
      tags:
      - attribute
      summary: Update Object Instance Attribute
      operationId: updateObjectInstanceAttribute
      parameters:
      - name: templateNamespace
        in: path
        description: "Template namespace, e.g., system"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: system
      - name: templateName
        in: path
        description: "Template alias, e.g., t1"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: t1
      - name: instanceName
        in: path
        description: "Instance alias, e.g., instance1"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: isntance1
      - name: attributeNamespace
        in: path
        description: "Attribute namespace, e.g., system"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: system
      - name: attributeName
        in: path
        description: "Attribute alias, e.g., attribute1"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: attribute1
      requestBody:
        description: dto
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBaseAttribute'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultSuccessSimple'
              example:
                code: 200
                message: ok
        "500":
          description: OODM general internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultError'
      x-codegen-request-body-name: dto
    delete:
      tags:
      - attribute
      summary: Delete Extended Attribute of Object Template Instance
      operationId: deleteObjectInstanceAttribute
      parameters:
      - name: templateNamespace
        in: path
        description: "Template namespace, e.g., system"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: system
      - name: templateName
        in: path
        description: "Template alias, e.g., t1"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: t1
      - name: instanceName
        in: path
        description: "Instance alias, e.g., instance1"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: instance1
      - name: attributeNamespace
        in: path
        description: "Attribute namespace, e.g., system"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: system
      - name: attributeName
        in: path
        description: "Attribute alias, e.g., attribute1"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: attribute
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultSuccessSimple'
              example:
                code: 200
                message: ok
        "500":
          description: OODM general internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultError'
  /v2/template/{templateNamespace}/{templateName}/instance:
    post:
      tags:
      - instance
      summary: Create a Regular Template Instance
      operationId: createInstance
      parameters:
      - name: templateNamespace
        in: path
        description: "Template namespace, e.g., system"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: system
      - name: templateName
        in: path
        description: "Template alias, e.g., t1"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: t1
      requestBody:
        description: dto
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntityInstanceForCreating'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultInstanceId'
        "500":
          description: OODM general internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultError'
      x-codegen-request-body-name: dto
  /v2/templates/{templateNamespace}/{templateName}/instances/create-or-update:
    post:
      tags:
      - instance
      summary: Incrementally Update Instance
      description: "Operate on the instance of a template (only template attribute values). If the instance exists, update the instance data; otherwise, create a new instance. Maximum 1000 instances can be processed at once. If there are any exceptions such as missing template attributes, mismatched value types, or null unique identifier values in the form data, errors will be prompted and the data will be rolled back. If there are any exceptions in setting real-time values, errors will be prompted and the request will be terminated."
      operationId: createOrUpdateInstance
      parameters:
      - name: templateNamespace
        in: path
        description: "Template namespace, e.g., system"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: system
      - name: templateName
        in: path
        description: "Template alias, e.g., employee"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: employee
      requestBody:
        description: instances
        content:
          application/json:
            schema:
              type: array
              example:
              - system.en_name: zhangsan
              items:
                type: object
                description: Map type:attributeNameapce.attributeEnName:attributeValue
        required: true
      responses:
        "200":
          description: OK
          content: {}
        "400":
          description: OODM general internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultError'
      x-codegen-request-body-name: instances
  /v2/template/{templateNamespace}/{templateName}/instance/query:
    post:
      tags:
      - instance
      summary: Query Instance List under a Regular Template
      description: Query compatible with SQL syntax V2 version
      operationId: queryNormalInstance
      parameters:
      - name: templateNamespace
        in: path
        description: "Template namespace, e.g., system"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: system
      - name: templateName
        in: path
        description: "Template alias, e.g., t1"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: t1
      - name: pageIndex
        in: query
        description: "Page number, e.g., 1"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 1
      - name: pageSize
        in: query
        description: "Number of data entries per page cannot exceed 500, e.g., 20"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 20
      - name: needExtAttribute
        in: query
        description: "Whether to include the static values of extended attributes, e.g., true"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          example: true
          default: false
      requestBody:
        description: query
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Query'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultPaginatedInstance'
        "500":
          description: OODM general internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultError'
      x-codegen-request-body-name: query
  /v2/template/{templateNamespace}/{templateName}/instance/{instanceName}:
    put:
      tags:
      - instance
      summary: Update Template Instance
      operationId: updateInstance
      parameters:
      - name: templateNamespace
        in: path
        description: "Template namespace, e.g., system"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: system
      - name: templateName
        in: path
        description: "Template alias, e.g., t1"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: t1
      - name: instanceName
        in: path
        description: "Instance alias, e.g., instance1"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: insatnce1
      requestBody:
        description: dto
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntityInstanceForUpdating'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultSuccessSimple'
              example:
                code: 200
                message: ok
        "500":
          description: OODM genernal internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultError'
      x-codegen-request-body-name: dto
    delete:
      tags:
      - instance
      summary: Delete Entity Template Instance
      operationId: deleteInstanceByEnName
      parameters:
      - name: templateNamespace
        in: path
        description: "Template namespace, e.g., system"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: templateName
        in: path
        description: "Template alias, e.g., t1"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: instanceName
        in: path
        description: "Instance alias, e.g., instance1"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultSuccessSimple'
              example:
                code: 200
                message: ok
        "500":
          description: OODM general internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultError'
  /v2/template/{templateNamespace}/{templateName}/instance/{instanceName}/attribute/self:
    get:
      tags:
      - attribute
      summary: List Instance Self Attributes
      operationId: listInstanceSelfAttributes
      parameters:
      - name: templateNamespace
        in: path
        description: "Template namespace, e.g., system"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: system
      - name: templateName
        in: path
        description: "Template alias, e.g., t1"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: t1
      - name: instanceName
        in: path
        description: "Instance alias, e.g., instance1"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: instance1
      - name: pageIndex
        in: query
        description: "Page index, e.g., 1"
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 1
      - name: pageSize
        in: query
        description: "Number of data entries per page cannot exceed 500, e.g., 20"
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 20
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultPaginatedInstanceBaseAttribute'
        "500":
          description: OODM general internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultError'
  /v2/events:
    get:
      tags:
      - event
      summary: Search All Events
      description: "Interface usage scenario description is that a comprehensive event search interface for complex filtering queries on events. <br/>For example, Search for events under the system.t1 template that originate from the function set with the ID system.f1, not bound to the label with the ID system.l1, and have enName or displayName containing 'es'. <br/>templateFullNames=system.t1&sourceFunctionSetFullNames=system.f1&<br/>excludeLabelFullNames=true&labelFullNames=system.l1&keyword=es,"
      operationId: eventSearch
      parameters:
      - name: keyword
        in: query
        description: "Keyword, e.g., value jump event"
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: value jump event
      - name: pageIndex
        in: query
        description: "Page index, e.g., 1"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 1
          default: 1
      - name: pageSize
        in: query
        description: "Number of data entries per page cannot exceed 500, e.g., 20"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 20
          default: 20
      - name: namespaces
        in: query
        description: "Namespace, e.g., system"
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            example: system
      - name: labelFullNames
        in: query
        description: "Label namespace and alias list, e.g., system.label1"
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            example: system.label1
      - name: excludeLabelFullNames
        in: query
        description: "Query data without specified labels, used in conjunction with labelFullNames. This field is invalid when labelFullNames is empty."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          example: false
          default: false
      - name: appNames
        in: query
        description: "This field is named incorrectly and has been deprecated. Please use the 'appIds' field instead. This field is still valid in the current version, and its functionality and usage are the same as 'appIds'."
        required: false
        deprecated: true
        style: form
        explode: true
        schema:
          type: array
          items:
            maxLength: 128
            type: string
            example: App_bac090d688004de9bf927b9ff66bfca7
      - name: appIds
        in: query
        description: Query specified appIds
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            maxLength: 128
            type: string
            example: App_bac090d688004de9bf927b9ff66bfca7
      - name: excludeAppNames
        in: query
        description: "This field is named incorrectly and has been deprecated. Please use the 'excludeAppIds' field instead. This field is still valid in the current version, and its functionality and usage are the same as 'excludeAppIds'."
        required: false
        deprecated: true
        style: form
        explode: true
        schema:
          type: boolean
          example: false
          default: false
      - name: excludeAppIds
        in: query
        description: "When query data that does not belong to the specified app, this parameter needs to be used in conjunction with 'appIds'. This field is invalid when 'appIds' is empty."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          example: false
          default: false
      - name: instanceNames
        in: query
        description: "List of instance aliases to which the metadata belongs (priority item). When this field is provided, templateNames is ignored."
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            example: instance1
      - name: sourceFunctionSetFullNames
        in: query
        description: "List of aliases for the namespaces of the source function sets. For example, system.f1"
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            example: system.f1
      - name: templateFullNames
        in: query
        description: "List of aliases for the namespaces of the templates to which the metadata belongs. For example, system.t1"
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            example: system.t1
      - name: functionSetFullNames
        in: query
        description: "List of aliases for the namespaces of the function sets to which the metadata belongs. For example, system.f2"
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            example: system.f2
      - name: containsInheritedMetadata
        in: query
        description: Specifies whether to include inherited metadata. Needs to be used in conjunction with specified templates or instances. This parameter has no effect when instanceNames and templateFullNames are empty.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          example: true
          default: true
      - name: containsSelfMetadata
        in: query
        description: Specifies whether to include self metadata. Needs to be used in conjunction with specified templates or instances. This parameter has no effect when instanceNames and templateFullNames are empty.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          example: true
          default: true
      responses:
        "200":
          description: Response content if the object is found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDisplayEventDto'
        "400":
          description: OODM general internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultError'
  /v2/template/{templateNamespace}/{templateName}/instance/{instanceName}/service/{serviceNamespace}/{serviceName}:
    post:
      tags:
      - runtime function
      summary: Execute Instance Service
      operationId: executeInstanceService
      parameters:
      - name: templateNamespace
        in: path
        description: "Namespace of the template, for example, system"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: system
      - name: templateName
        in: path
        description: "Alias of the template, for Example, t1"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: t1
      - name: instanceName
        in: path
        description: "Alias of the instance, for Example， instance1"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: instacne1
      - name: serviceNamespace
        in: path
        description: "Namespace of the service, for example, system"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: system
      - name: serviceName
        in: path
        description: "Alias of the service, for example, getPropertyValue"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: getPropertyValue
      requestBody:
        description: Service input parameters
        content:
          application/json:
            schema:
              type: object
              example:
                propName: p1
        required: false
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultServiceExec'
        "500":
          description: OODM general internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultError'
      x-codegen-request-body-name: inputs
  /v2/template/{templateNamespace}/{templateName}/instances:
    get:
      tags:
      - instance
      summary: Search Normal Instances
      operationId: searchNormalInstances
      parameters:
      - name: templateNamespace
        in: path
        description: "template namespace, for example， system"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: system
      - name: templateName
        in: path
        description: "template alias, for example， t1"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: t1
      - name: labelIds
        in: query
        description: "labels, for example 12222"
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: integer
            format: int64
            example: 12222
      - name: keyword
        in: query
        description: "Keyword used in conjunction with searchAttributeId. This field is ineffective when searchAttributeId is empty. Matches the fuzzy value of the specified attribute, e.g., sx. <br/>1. When performing fuzzy search on dateTime type, the stored value is in UTC, and time zone conversion needs to be done manually. <br/>2. This field does not support fuzzy queries for boolean type attributes."
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: sx
      - name: pageIndex
        in: query
        description: "Page number, e.g., 1"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 1
          default: 1
      - name: pageSize
        in: query
        description: "Number of data entries per page cannot exceed 500, e.g., 20"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 10
          default: 20
      - name: searchAttributeId
        in: query
        description: "搜索字段,如：12221"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          example: 12221
      - name: containsDerivedInstances
        in: query
        description: "Whether to include instances of derived templates, e.g., true"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          example: true
          default: true
      - name: needSystemAttributeValue
        in: query
        description: "Whether system attribute values are needed, e.g., true"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          example: true
          default: false
      - name: needNormalAttributeValue
        in: query
        description: "Whether data of normal attributes (non-system attributes, non-main display fields) are needed. By default, only the values of main display fields are returned, e.g., true"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          example: true
          default: false
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultInstanceTable'
        "500":
          description: OODM general internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultError'
  /v2/templates/{templateNamespace}/{templateName}/instances/{instanceName}/value:
    get:
      tags:
      - instance
      summary: Get Instance Details by Instance Alias
      description: "Currently, it only supports entity template instances"
      operationId: getInstanceMapByName
      parameters:
      - name: templateNamespace
        in: path
        description: "template namespace, e.g., system"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: system
      - name: templateName
        in: path
        description: "template alias, e.g., employee"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: employee
      - name: instanceName
        in: path
        description: "instance alias, e.g., zhangsan"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: zhangsan
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                description: Map type is attributeNameapce.attributeEnName:attributeValue
                example:
                  system.enName: zhangsan
        "400":
          description: OODM general internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultError'
  /v2/template/{templateNamespace}/{templateName}/instances/{instanceName}:
    get:
      tags:
      - instance
      summary: Get Instance Details under an Entity Template
      operationId: getNormalInstance
      parameters:
      - name: templateNamespace
        in: path
        description: "template namespace, e.g., system"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: system
      - name: templateName
        in: path
        description: "template alias, e.g., t1"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: t1
      - name: instanceName
        in: path
        description: "instance alias, e.g., instance1"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: instance1
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultDisplayInstance'
        "500":
          description: OODM general internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultError'
  /v2alpha/templates/{templateNamespace}/{templateName}/relations/{relationNamespace}/{relationName}/instances:
    get:
      tags:
      - instance
      summary: Search Relation Instances
      operationId: searchRelationInstances
      parameters:
      - name: templateNamespace
        in: path
        description: "Template namespace, e.g., system"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: system
      - name: templateName
        in: path
        description: "Template alias, e.g., test"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: test
      - name: relationNamespace
        in: path
        description: "Relation namespace, e.g., system"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: system
      - name: relationName
        in: path
        description: "Relation alias, e.g., relation1"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: relation1
      - name: labelFullNames
        in: query
        description: "Label namespace. alias list, e.g., system.label1"
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            example: system.label1
      - name: keyword
        in: query
        description: "Keyword for fuzzy matching values of specified attributes, used in conjunction with the 'searchAttributeNameWithNamespace' field. For example, 14;<br/>1. When performing fuzzy search on dateTime type, the stored value is in the 0 time zone and needs to be converted accordingly.<br/>2. This field does not support fuzzy queries for boolean type attributes."
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: "14"
      - name: pageIndex
        in: query
        description: "Page number, e.g., 1"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 1
          default: 1
      - name: pageSize
        in: query
        description: "Maximum number of data entries per page is 500. e.g., 20"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 20
          default: 20
      - name: searchAttributeNameWithNamespace
        in: query
        description: "Namespace and alias of the search field (can only be the attribute on the target template), e.g., system.status"
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: system.status
      - name: containsDerivedInstances
        in: query
        description: "Whether to include instances of derived templates, e.g., true"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          example: true
          default: true
      - name: needSystemAttributeValue
        in: query
        description: "Whether system attribute values are required, e.g., false"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          example: false
          default: false
      - name: needNormalAttributeValue
        in: query
        description: "Whether values of normal attributes (non-system attributes, non-primary display fields) are required. By default, only the values of primary display fields are included, e.g., false"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          example: false
          default: false
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstanceTable'
        "400":
          description: OODM general internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultError'
      x-codegen-request-body-name: filterDto
  /v2alpha/relations:
    get:
      tags:
      - relation
      summary: Relation Search
      description: "Comprehensive search interface for relations, allowing complex filtering queries on relations. For example, to search for relations in templates \"system.t1\" and \"system.t3\" that reference template \"system.t5\", the parameters would be:<br/>templateFullNames=system.t1&templateFullNames=system.t3<br/>&refFullNames=system.t5&refFullNameType=TEMPLATE"
      operationId: relationSearch
      parameters:
      - name: templateFullNames
        in: query
        description: "Namespace and alias list of the metadata templates, e.g., system.t1"
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            example: system.t1
      - name: relationFullNames
        in: query
        description: "Namespace and alias list of the relations, e.g., system.r1"
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            example: system.r1
      - name: refFullNames
        in: query
        description: "Namespace and alias list of the referenced templates, e.g., system.t2"
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            example: system.t2
      - name: refFullNameType
        in: query
        description: |
          Type of referenced namespace and alias (used in conjunction with refFullNames), e.g., RELATION
            * TEMPLATE Template
            * RELATION Relation
            * ATTRIBUTE Attribute
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: RELATION
          default: TEMPLATE
          enum:
          - TEMPLATE
          - RELATION
          - ATTRIBUTE
      - name: pageIndex
        in: query
        description: "Page number, e.g., 1"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 1
          default: 1
      - name: pageSize
        in: query
        description: "Maximum number of data entries is 500 per page, e.g., 20"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 20
          default: 20
      responses:
        "200":
          description: Content returned when the object is found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDisplayRelationDto'
        "400":
          description: OODM general internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultError'
      x-codegen-request-body-name: filterDto
  /v2alpha/templates/{templateNamespace}/{templateName}/relations/{relationNamespace}/{relationName}/relationNodes:
    get:
      tags:
      - relation
      summary: Get Nodes by RelationID
      operationId: getNodesByRelationId
      parameters:
      - name: templateNamespace
        in: path
        description: "Template namespace, e.g., system"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: system
      - name: templateName
        in: path
        description: "Template alias, e.g., test"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: test
      - name: relationNamespace
        in: path
        description: "Relation namespace, e.g., system"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: system
      - name: relationName
        in: path
        description: "Relation alias, e.g., relation1"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: relation1
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DisplayRelationNodeDto'
        "400":
          description: OODM general internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultError'
  /v2/template/{templateNamespace}/{templateName}/parents:
    get:
      tags:
      - template
      summary: Recursive Search for All Parent Templates
      description: It includes the current template.
      operationId: listParentsUsing
      parameters:
      - name: templateNamespace
        in: path
        description: "Namespace of the template, e.g., system"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: system
      - name: templateName
        in: path
        description: "Template alias, e.g., t1"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: t1
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultTemplateTree'
        "500":
          description: OODM general internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultError'
  /v2/template/{templateNamespace}/{templateName}/service/{serviceNamespace}/{serviceName}:
    post:
      tags:
      - runtime function
      summary: Execute form Template Service
      operationId: executeFormService
      parameters:
      - name: templateNamespace
        in: path
        description: "Template namespace, e.g., system"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: system
      - name: templateName
        in: path
        description: "emplate alias, e.g., serviceNamespace"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: t1
      - name: serviceNamespace
        in: path
        description: "Service namespace, e.g., serviceName"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: system
      - name: serviceName
        in: path
        description: "Service alias, e.g., getPropertyValue"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: getPropertyValue
      requestBody:
        description: Service input parameters
        content:
          application/json:
            schema:
              type: object
              example:
                propName: p1
        required: false
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultServiceExec'
        "500":
          description: OODM general internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultError'
      x-codegen-request-body-name: inputs
  /v2/alerts/ack:
    post:
      tags:
      - alarm
      summary: Confirm Real-time Alarm Information
      operationId: alertsAck
      requestBody:
        description: dto
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlertAckDto'
        required: true
      responses:
        "200":
          description: OK
          content: {}
        "400":
          description: OODM general internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultError'
      x-codegen-request-body-name: dto
  /v2/alarms:
    get:
      tags:
      - alarm
      summary: Query Alarms
      description: "Interface usage scenario description is that comprehensive alarm search interface is for complex filtering queries on alarms. <br/>For example, Search for enabled alarms with the name containing \"xxx\" under the attribute labeled \"system.aaa\" bound to the instance \"employee\". <br/>instanceEnName=employee&attributeLabelNames=system.aaa&<br/>alarmDisplayName=xxx&alarmEnable=true"
      operationId: queryAlarms
      parameters:
      - name: instanceEnName
        in: query
        description: "Instance alias, e.g., Zhang San"
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: Zhang San
      - name: instanceDisplayName
        in: query
        description: "Multiple instances with the same name may be obtained in different namespaces, e.g., Zhang San"
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: Zhang San
      - name: instanceLabelNames
        in: query
        description: "Instance label list, multiple labels with the same name may be obtained in different namespaces, e.g., objectLabel1"
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            example: objectLabel1
      - name: attributeEnName
        in: query
        description: "Attribute alias, multiple attributes with the same alias may be obtained in different namespaces, e.g., attr1"
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: attr1
      - name: attributeDisplayName
        in: query
        description: "Attribute name, multiple attributes with the same name may be obtained in different namespaces, e.g., attr1"
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: attr1
      - name: attributeComment
        in: query
        description: "Attribute description, fuzzy matching, e.g., test"
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: test
      - name: attributeLabelNames
        in: query
        description: "Attribute label list, multiple labels with the same name may be obtained in different namespaces, e.g., attrLabel1"
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            example: attrLabel1
      - name: alarmEnName
        in: query
        description: "Alarm alias has multiple aliases separated by commas, e.g., uuid295479a136334d50810427cfa3573fd4,uuidba26fbeaec5f4d55a0335b1cc713d4b2,uuid538e39e0c57d4c07ad023edaa78244a2"
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: "uuid295479a136334d50810427cfa3573fd4,uuidba26fbeaec5f4d55a0335b1cc713d4b2,uuid538e39e0c57d4c07ad023edaa78244a2"
      - name: alarmDisplayName
        in: query
        description: "Alarm name, fuzzy matching, e.g., alarm"
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: alarm
      - name: alarmComment
        in: query
        description: "Alarm description, fuzzy matching, e.g., lower than"
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: lower than
      - name: alarmPriority
        in: query
        description: "Alarm priority (1-10), e.g., 5"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 5
      - name: alarmEnabled
        in: query
        description: "Alarm enabled, e.g., true"
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          example: true
      - name: alarmType
        in: query
        description: "Alarm type, e.g., high temperature alarm"
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: high temperature alarm
      - name: page
        in: query
        description: "Page number for pagination, starting from 1, e.g., 1"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 1
          default: 1
      - name: perPage
        in: query
        description: "Number of elements to return per page. The default is 20 and maximum number is 500, e.g., 50"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 50
          default: 20
      - name: excludeFunctionSetAlarm
        in: query
        description: Whether to exclude function set alarm
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          example: false
          default: false
      responses:
        "200":
          description: Content returned when the object is found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDisplayAlarmDtoWithOwner'
        "400":
          description: OODM general internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultError'
      x-codegen-request-body-name: query
    post:
      tags:
      - alarm
      summary: Batch Create Alarm Rules
      description: "Create a maximum of 1000 alarms at once. If an error occurs, it will be rolled back. Possible exceptions include templates, instances, and attributes not found, non-physical templates not supported for creating alarms, required fields not provided, exceeded priority value range, etc."
      operationId: batchCreateAlarms
      requestBody:
        description: dto
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchCreateAlarmWithSourceDto'
        required: true
      responses:
        "200":
          description: OK
          content: {}
        "400":
          description: OODM general internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultError'
      x-codegen-request-body-name: dto
  /v2/alarms/{name}:
    put:
      tags:
      - alarm
      summary: Modify Alarm Rules
      description: Modify alarm rules
      operationId: updateAlarm
      parameters:
      - name: name
        in: path
        description: "Currently, the alias is a system-generated UUID at the time of creation"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: e82d430a-c503-4f28-a063-54d981eec43e
      requestBody:
        description: Alarm metadata information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AbstractAlarm'
            example:
              displayName: Boiler High Temperature Alarm
              priority: 8
              enable: true
              operator: GE
              limitValue: "100"
              deadBand: 10
              deadBandType: NUMERIC
              comment: Alarm triggered when boiler temperature exceeds 100
              alarmType: Temperature Alarm
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultSuccessSimple'
              example:
                code: 200
                message: ok
        "400":
          description: OODM general internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultError'
      x-codegen-request-body-name:
        type: object
        properties:
          code:
            type: integer
            format: int32
            enum:
            - 10001013
            - 10001009
            description: |
              Error code
              * 10001013 Parameter does not conform to the specification
              * 10001009 Alarm does not exist
          message:
            type: string
            description: Error message
            example: priority:0 Does not conform to the specification. Must be an integer between 1 and 10
          data:
            type: object
          detail:
            type: string
            description: Error detail
            example: string
    delete:
      tags:
      - alarm
      summary: Delete Alarm Rule
      description: "Delete alarm rule, returns success even if the alarm rule is not found"
      operationId: deleteAlarm
      parameters:
      - name: name
        in: path
        description: "Alarm alias, currently the alias is a system-generated UUID at the time of creation"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: e82d430a-c503-4f28-a063-54d981eec43e
      responses:
        "204":
          description: OK
  /v2/attributes/{attributeFullName}/alarms:
    get:
      tags:
      - alarm
      summary: List Alarms by Attributed ID
      operationId: listAlarmsByAttributeId
      parameters:
      - name: attributeFullName
        in: path
        description: "Full path of the attribute (template namespace.template alias.instance alias.attribute namespace.attribute alias), e.g., system.t1.sytem.p1 or system.t2.instance1.system.p2"
        required: true
        style: simple
        explode: false
        schema:
          type: string
        examples:
          example:
            value: system.t1.sytem.p1
          example-0:
            value: system.t2.instance1.system.p2
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DisplayAlarmDto'
        "400":
          description: OODM general internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultError'
  /v2/alerts/history/{alertRecordId}:
    get:
      tags:
      - alarm history
      summary: Query Alert History
      operationId: getAlertHistoryByAlertRecordId
      parameters:
      - name: alertRecordId
        in: path
        description: Alert record ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AlertRecordDetail'
              example:
              - alertRecordId: a95eb247e47e466ebcc1e5ff8df764a1
                alarmName: uuid1079ef50a32c4b1d8dad7f97addf46fd
                triggerCompareOperator: GT
                priority: 1
                templateName: materialInfo
                templateNamespace: system
                instanceName: m_100012870
                attributeName: discharge_pressure
                instanceDisplayName: obj_data2
                attributeDisplayName: pro_obj
                displayName: alarm6
                ackUserName: test
                ackStatus: 0
                triggerCondition: 150 > 100
                description: An alarm is triggered when the number exceeds 100
                startDatetime: 2021-04-06T16:00:00.000+08:00
                ackDatetime: 2021-04-06T17:00:00.000+08:00
                disappearedDatetime: 2021-04-06T18:00:00.000+08:00
                triggerAttributeValue: "150"
                disappearedStatus: 0
        "400":
          description: |
            Error message
            * 90900006 Invalid alarm history ID (no corresponding alarm record found)
              {"code":90900006, "message":"Invalid alarm history ID (no corresponding alarm record found)", "data": null}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400_5'
  /v2/alerts/history:
    get:
      tags:
      - alarm history
      summary: Get alarm record history
      description: |
        The parameters of the interface are combined with an "AND" relationship. If a parameter is not provided, there are no restrictions.
        For example: If no parameters are passed to the interface, the data retrieved will be based on the trigger time (start_datatimestamp) in descending order, limited to the top 20 records.
        If you want to query alarms triggered between 2021-04-01 16:00:00 and 2021-04-10 23:59:59 (Beijing time), with instance or attribute aliases, and alarm descriptions containing 'p1',and currently occurring alarms, you can provide the following parameters:
           keyword:p1
           startTime:2021-04-01T16:00:00.000+08:00
           endTime:2021-04-10T23:59:59.000+08:00
           status:1
      operationId: getAlertRecordHistory
      parameters:
      - name: keyword
        in: query
        description: "Match instances, attribute aliases, or alarm descriptions (description) with a fuzzy search"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ackUserName
        in: query
        description: User who acknowledged the alarm
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ackStatus
        in: query
        description: "Acknowledgment status (0 is not acknowledged, 1 is acknowledged)"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          enum:
          - 0
          - 1
        example: 0
      - name: startTime
        in: query
        description: |
          Start time (trigger time) in RFC 3339 format, yyyy-MM-dd'T'HH:mm:ss.SSSZ, e.g., 2021-04-06T16:00:00.000+08:00 (+08:00 indicates the time zone offset)
          If not provided, there is no start time restriction
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
        example: 2021-04-06T16:00:00.000+08:00
      - name: endTime
        in: query
        description: |
          End time (trigger time) in RFC 3339 format, yyyy-MM-dd'T'HH:mm:ss.SSSZ, e.g., 2021-04-06T16:00:00.000+08:00 (+08:00 indicates the time zone offset)
          If not provided, there is no end time restriction
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date-time
        example: 2021-04-06T16:00:00.000+08:00
      - name: status
        in: query
        description: "Alarm record status (0 is disappeared, 1 is currently occurring)"
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - "0"
          - "1"
        example: 1
      - name: current
        in: query
        description: "Current page, e.g., 1"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 1
          default: 1
      - name: pageSize
        in: query
        description: "Maximum number of data entries is 500, e.g., 20"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 20
          default: 20
      - name: priorities
        in: query
        description: Priority (integer between 1 and 10), multiple values separated by commas.
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: "1,3,4"
      - name: displayName
        in: query
        description: Alarm name
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: orderBy
        in: query
        description: |
          Sorting order (ascending: asc, descending: desc). Supports sorting fields: priority, start_datatimestamp, disappeared_datatimestamp, ack_datatimestamp.
          Format: field1 order, field2 order. For example, priority desc,start_datatimestamp desc
          默认:start_datatimestamp desc
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Data history returned if successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
        "400":
          description: |
            Error message
            * 90900005 Error time format 
              {"code":90900005, "message":"startTime 2021-04-06 16:00:00.000 is invalid: The value time format of startTime needs to comply with RFC 3339 standard and should beyyyy-MM-dd'T'HH:mm:ss.SSSZ，
              For example, 2021-04-06T16:00:00.000+08:00 (+08:00 represents the time zone offset) , 'data': null}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400_6'
  /v2/alarms/authorized-users:
    get:
      tags:
      - alarm
      summary: Get Authorized Users by Alarms
      description: |
        The maximum number of alarms to be processed is 100. An error is thrown if it exceeds 100.
        If the full path of an alarm does not exist or no users with push permissions are found, an empty array is returned.
        To handle high concurrency scenarios, the user list for each alarm is cached for 5 minutes (there may be a delay of less than 5 minutes for user data changes).
      operationId: getAuthUsersByAlarms
      parameters:
      - name: alarmFullPaths
        in: query
        description: List of alarm full paths, complete alarm information (template namespace, template alias, instance alias, alarm alias). Multiple alarm full paths are separated by commas (the maximum limit is 100, an error is thrown if it exceeds 100).
        required: true
        style: form
        explode: true
        schema:
          type: array
          example: "system.Template_823.msa_test_05.p1_a1,system.Template_829.msa_test_09.p1_a2"
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_2'
        "400":
          description: |
            Error message
            * 90900002  The list of alarm full paths cannot be empty  {"code":90900002,"message":" The list of alarm full paths cannot be empty ","data":null}
            * 90900003 Exceeded the maximum limit of 100 alarms {"code":90900003,"message":"Exceeded the maximum limit of 100 alarms","data":null}
            * 90900004 Incorrect format of the alarm full path {"code":90900004,"message":"Incorrect format of the alarm full path (template namespace, template alias, instance alias, alarm alias)","data":null}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400_7'
  /v2/subscriptions:
    get:
      tags:
      - subscription
      summary: Search Subscriptions
      operationId: searchSubscriptions
      parameters:
      - name: pageIndex
        in: query
        description: Page number. e.g., 1
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 1
        example: 1
      - name: pageSize
        in: query
        description: Maximum data entries per page is 200, e.g., 20
        required: false
        style: form
        explode: true
        schema:
          maximum: 200
          type: integer
          format: int32
          default: 20
        example: 20
      - name: keyword
        in: query
        description: Fuzzy match subscription alias, e.g., o1. Cannot be used with enNames simultaneously.
        required: false
        style: form
        explode: true
        schema:
          maxLength: 64
          type: string
        example: o1
      - name: namespaces
        in: query
        description: "Exact match subscription namespace. Limit: 100"
        required: false
        style: form
        explode: true
        schema:
          maxItems: 100
          type: array
          example:
          - system
          - system1
          items:
            maxLength: 64
            type: string
      - name: enNames
        in: query
        description: "Exact match subscription alias. Cannot be used with keyword simultaneously. Limit: 100"
        required: false
        style: form
        explode: true
        schema:
          maxItems: 100
          type: array
          example:
          - o1
          - o2
          items:
            type: string
      - name: templatesOrInstances
        in: query
        description: "Template instance information. Template format: (templateNamespace.templateName: system.Template); Instance format: (templateNamespace.templateName.instanceName: system.Template.instance). Limit: 100. Strict adherence to the format rules is required; otherwise, an error will occur"
        required: false
        style: form
        explode: true
        schema:
          maxItems: 100
          type: array
          example:
          - system.Template
          - system.Template.instance
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSubscription'
        "400":
          description: |
            Error message
            * 10001013 Maximum number of pageSize is 200  {"code":10001013, "message":"Maximum number of pageSize is 200.", "data": null}
            * 10001013 Maximum length of keyword is 64  {"code":10001013, "message":"Maximum length of keyword is 64.", "data": null}
            * 10001013 Maximum number of namespcaces is 100  {"code":10001013, "message":"Maximum number of namespcaces is 100.", "data": null}
            * 10001013 Maximum number of enNames is 100  {"code":10001013, "message":"Maximum number of enNames is 100.", "data": null}
            * 10001013 Maximum number of templatesOrInstances is 100  {"code":10001013, "message":"Maximum number of templatesOrInstances is 100.", "data": null}
            * 10001013 Template instance message. Error template format.  {"code":10001013, "message":""Message": "xxxx format error, the correct format is template format (template namespace. template alias: xxxx. xxxx); instance format (template namespace. template alias. instance alias: xxx. xxx. xxx)", "data": null}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400_8'
  /v2/templates/{templateNamespace}/{templateName}/subscriptions/{subscriptionNamespace}/{subscriptionName}:
    get:
      tags:
      - subscription
      summary: Search Template Subscriptions
      operationId: searchTemplateSubscriptions
      parameters:
      - name: templateNamespace
        in: path
        description: Template namespace
        required: true
        style: simple
        explode: false
        schema:
          maxLength: 64
          type: string
        example: system
      - name: templateName
        in: path
        description: Template alias
        required: true
        style: simple
        explode: false
        schema:
          maxLength: 64
          type: string
        example: template
      - name: subscriptionNamespace
        in: path
        description: Subscription namespace
        required: true
        style: simple
        explode: false
        schema:
          maxLength: 64
          type: string
        example: system
      - name: subscriptionName
        in: path
        description: Subscription alias
        required: true
        style: simple
        explode: false
        schema:
          maxLength: 64
          type: string
        example: s1
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
        "400":
          description: |
            Error information
            * 10001009 Template does not exist  {"code":10001009, "message":"the template to while fullName(namespace.enName):xx.xx belongs was not found.", "data": null}
            * 10001013 Maximum length of templateNamespace is 64  {"code":10001013, "message":"Maximum length of templateNamespace is 64.", "data": null}
            * 10001013 Maximum length of templateName is 64  {"code":10001013, "message":"Maximum length of templateName is 64.", "data": null}
            * 10001013 Maximum length of subscriptionNamespace is 64  {"code":10001013, "message":"Maximum length of subscriptionNamespace is 64.", "data": null}
            * 10001013 Maximum length of subscriptionName is 64  {"code":10001013, "message":"Maximum length of subscriptionName is 64.", "data": null}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400_9'
  ? /v2/templates/{templateNamespace}/{templateName}/instances/{instanceName}/subscriptions/{subscriptionNamespace}/{subscriptionName}
  : get:
      tags:
      - subscription
      summary: Search Instance Subscriptions
      operationId: searchInstanceSubscriptions
      parameters:
      - name: templateNamespace
        in: path
        description: Template namespace
        required: true
        style: simple
        explode: false
        schema:
          maxLength: 64
          type: string
        example: system
      - name: templateName
        in: path
        description: Template alias
        required: true
        style: simple
        explode: false
        schema:
          maxLength: 64
          type: string
        example: template
      - name: instanceName
        in: path
        description: Instance alias
        required: true
        style: simple
        explode: false
        schema:
          maxLength: 64
          type: string
        example: instance
      - name: subscriptionNamespace
        in: path
        description: Subscription namespace
        required: true
        style: simple
        explode: false
        schema:
          maxLength: 64
          type: string
        example: system
      - name: subscriptionName
        in: path
        description: subscription alias
        required: true
        style: simple
        explode: false
        schema:
          maxLength: 64
          type: string
        example: s1
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
        "400":
          description: |
            Error message
            * 10001009 Template does not exist  {"code":10001009, "message":"the template to while fullName(namespace.enName):xx.xx belongs was not found.", "data": null}
            * 10001009 Instance does not exist  {"code":10001009, "message":"the entity to while enName:xxxx belongs was not found.", "data": null}
            * 10001013 Maximum length of templateNamespace is 64  {"code":10001013, "message":"Maximum length of templateNamespace is 64.", "data": null}
            * 10001013 Maximum length of templateName is 64  {"code":10001013, "message":"Maximum length of templateName is 64.", "data": null}
            * 10001013 Maximum length of instanceName is 64  {"code":10001013, "message":"Maximum length of instanceName is 64.", "data": null}
            * 10001013 Maximum length of subscriptionNamespace is 64  {"code":10001013, "message":"Maximum length of subscriptionNamespace is 64.", "data": null}
            * 10001013 Maximum length of subscriptionName is 64  {"code":10001013, "message":"Maximum length of subscriptionName is 64.", "data": null}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400_10'
  /v2/subscriptions/bulk:
    put:
      tags:
      - subscription
      summary: Batch Update Entity Template Instance Subscriptions
      description: Support batch update of subscriptions across instances
      operationId: updateSubscriptions
      requestBody:
        description: Update instance subscriptions
        content:
          application/json:
            schema:
              maxItems: 100
              type: array
              items:
                $ref: '#/components/schemas/OperateSubscription'
        required: true
      responses:
        "200":
          description: OK
          content: {}
        "400":
          description: |
           Error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultError'
    post:
      tags:
      - subscription
      summary: Batch Create Entity Template Instance Subscriptions
      description: Support batch creation of subscriptions across instances
      operationId: createSubscriptions
      requestBody:
        description: Create instance subscription
        content:
          application/json:
            schema:
              maxItems: 100
              type: array
              items:
                $ref: '#/components/schemas/OperateSubscription'
        required: true
      responses:
        "200":
          description: OK
          content: {}
        "400":
          description: |
            Error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultError'
    delete:
      tags:
      - subscription
      summary: Batch Delete Entity Template Instance Subscriptions
      description: Support batch delete of subscriptions across instances
      operationId: deleteSubscriptions
      requestBody:
        description: Delete instance subscriptions
        content:
          application/json:
            schema:
              maxItems: 100
              type: array
              items:
                $ref: '#/components/schemas/DeleteSubscription'
        required: true
      responses:
        "200":
          description: OK
          content: {}
  /v2/models/tasks/imports:
    post:
      tags:
      - model import/export
      summary: Create a Model Import Task for a Compressed Package
      description: Create a task to import a model compressed package under a specified app. For the same app, if an import or export task is already in progress, importing is not allowed. The maximum concurrent execution is 5. In case of import failure, successfully imported models will not be rolled back. However, the same model compressed package can be imported multiple times, and the system handles it as an incremental update (existing models will be updated, and new models will be added if they don't exist).
      operationId: modelImport
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ImportModelTask'
        required: true
      responses:
        "201":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportModelTask'
        "400":
          description: |
            Error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultError'
              example:
                code: 10001009
                message: appId:App_1af1a690b81b7cabc2f5fde0b00d15ads corresponding app is not found.
                detail: string
                targetService: Object Modeling Configuration Service
  /v2/models/tasks/exports:
    post:
      tags:
      - model import/export
      summary: Create a Task to Export Model Compressed Package
      description: Create a task to export the model compressed package of a specified app. If an import task is already executing for the same app, exporting is not allowed. However, if an export task is already executing, another export can be initiated. The maximum concurrent export tasks per app is 5, and the overall maximum concurrent export tasks is also 5. The export process only involves query operations and does not modify any model or instance data. Multiple exports of the same package are idempotent.
      operationId: modelExport
      requestBody:
        description: Information required for model export
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportModelTask'
      responses:
        "201":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportModelTask'
        "400":
          description: |
            Error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultError'
  /v2/models/tasks/{taskId}/download:
    get:
      tags:
      - model import/export
      summary: Download Model Compressed Package
      description: Download the exported model compressed package as a binary file in the response.
      operationId: modelExportDownload
      parameters:
      - name: taskId
        in: path
        description: task id
        required: true
        style: simple
        explode: false
        schema:
          maxLength: 32
          type: string
        example: ac063e0a4ecb439186f6ae7eb9223842
      responses:
        "200":
          description: OK
          content:
            application/octet-stream:
              schema:
                type: string
                description: Export file stream
                format: binary
        "400":
          description: |
            Error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultError'
  /v2/models/tasks/exports/{taskId}:
    get:
      tags:
      - model import/export
      summary: Query Model Export Task Status
      description: |
        Get detailed information about the export task, including its status and other system-generated information. When the task status is successful, you can call the /v2/models/tasks/{taskId}/download endpoint to download the export file. The export task status will be cleared 30 minutes after the task is completed.
      operationId: getExportModelTaskStatus
      parameters:
      - name: taskId
        in: path
        description: task id
        required: true
        style: simple
        explode: false
        schema:
          maxLength: 32
          type: string
        example: ac063e0a4ecb439186f6ae7eb9223842
      responses:
        "200":
          description: OK
          headers:
            Retry-After:
              description: The client should wait for this amount of time in seconds before making another request. This header is intended to prevent system overload due to frequent retries by the client.
              style: simple
              explode: false
              schema:
                type: integer
                default: 1
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportModelTask'
        "400":
          description: |
           Error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultError'
  /v2/models/tasks/imports/{taskId}:
    get:
      tags:
      - model import/export
      summary: Query Model Import Task Status
      description: |
        Get detailed information about an import task, including its status and other system-generated information. Clients can use this interface to retrieve the status of the import task. The import task status will be cleared after 30 minutes of task completion.
      operationId: getModelImportTaskStatus
      parameters:
      - name: taskId
        in: path
        description: task id
        required: true
        style: simple
        explode: false
        schema:
          maxLength: 32
          type: string
        example: ac063e0a4ecb439186f6ae7eb9223842
      responses:
        "200":
          description: OK
          headers:
            Retry-After:
              description: The client should wait for this amount of time in seconds before making another request. This header is intended to prevent the client from causing system overload due to frequent retries.
              style: simple
              explode: false
              schema:
                type: integer
                default: 1
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportModelTask'
        "400":
          description: |
            Error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultError'
components:
  schemas:
    BasicTask:
      title: BasicTask
      type: object
      properties:
        taskId:
          maxLength: 32
          type: string
          description: The task ID generated by the system. The caller must return it to the system without any modifications according to the provided content.
          readOnly: true
          example: ac063e0a4ecb439186f6ae7eb9223842
        createdTime:
          type: string
          description: "Task creation time, automatically generated by the system. The time format is chosen based on the request header. For more details, refer to the usage guide - Object Modeling Time Type Data Specification."
          format: date-time
          readOnly: true
        finishedTime:
          type: string
          description: "Task completion time, automatically generated by the system. This field is null when the task is still in progress. The time format is chosen based on the request header. For more details, refer to the usage guide - Object Modeling Time Type Data Specification."
          format: date-time
          readOnly: true
        status:
          type: integer
          description: |
            Import/export status. Generated by the system based on the current task execution status. When initiating an import task for the first time, the task ID is returned and the status is always 0, indicating that the parameters have been received and import/export is in progress. Subsequent status queries may return one of the three values: -1, 0, 1.
            * -1: Failed
            * 0: In progress
            * 1: Successful
          format: int32
          readOnly: true
          example: 0
          enum:
          - -1
          - 0
          - 1
        message:
          type: string
          description: |
            Specific information about the failure. This field is only populated when the status is -1. During the import/export process, there may be business exceptions that cause the task to fail. The corresponding exception reasons will be displayed in this field.
            * Duplicate property/event/service/subscription
            * Template/instance/feature collection/property/event not found
            * Invalid parameters, such as name, alias, description length, property max/min value range, etc.
            * Non-numeric boolean property triggers an alarm
            * Non-entity property has a binding relationship
          readOnly: true
      description: Basic task information
    ExportModelTask:
      required:
      - appId
      type: object
      description: Export task
      allOf:
      - $ref: '#/components/schemas/BasicTask'
      - type: object
        properties:
          appId:
            maxLength: 128
            type: string
            description: The appId where the model is exported from.
            writeOnly: true
            example: App_1af1a690b81b7cabc2f5fde0b00d15ad
          expirationTime:
            type: string
            description: |-
              Expiration time for the export, automatically generated by the system. This field is null if the task is not yet completed or has failed. The time format is selected by the request header. For more details, refer to the Usage Guide - Object Modeling Time Type Data Specification.
              After the export task is completed, a downloadable file will be generated, which will be retained by the system for 30 minutes. Once the expiration time is reached, the file will be cleared to free up space and avoid occupying a large amount of space.
              The system does not guarantee immediate cleaning of the file at the expiration time, but will find a suitable time to clean it. However, the client must ensure that the file is accessed before the expiration time is reached.
            format: date-time
            readOnly: true
    ImportModelTask:
      required:
      - appId
      - file
      type: object
      allOf:
      - $ref: '#/components/schemas/BasicTask'
      - type: object
        properties:
          appId:
            maxLength: 128
            type: string
            description: The appId where the model is imported, used to check if the app exists.
            writeOnly: true
            example: App_1af1a690b81b7cabc2f5fde0b00d15ad
          file:
            type: string
            description: The zip file containing the imported model. The file name must be "model.zip". It can be obtained through /v2/models/tasks/exports or from the same-named file in the app's exported zip package.
            format: binary
            writeOnly: true
    InstanceAttribute:
      title: InstanceAttribute
      description: Instance attribute details
      allOf:
      - $ref: '#/components/schemas/DisplayBaseAttribute'
      - type: object
        properties:
          existAlarm:
            type: boolean
            description: Indicates if an alarm exists.
            example: false
          instanceEnName:
            type: string
            description: Instance alias
            example: instance1
          instanceDisplayName:
            type: string
            description: Instance name
            example: Instance 1
    BatchCreateAlarmWithSourceDto:
      title: BatchCreateAlarmWithSourceDto
      type: object
      properties:
        dtos:
          type: array
          items:
            $ref: '#/components/schemas/CreateAlarmDtoWithSource'
      description: Batch create alarm information.
    CreateAlarmDtoWithSource:
      title: CreateAlarmDtoWithSource
      required:
      - attributeName
      - deadBand
      - deadBandType
      - displayName
      - limitValue
      - operator
      - priority
      - templateName
      type: object
      properties:
        templateName:
          type: string
          description: Template information
          example: system.employee
        attributeName:
          type: string
          description: Attribute information
          example: system.p1
        instanceName:
          type: string
          description: Instance alias
          example: zhangsan
        displayName:
          type: string
          description: name
          example: alarm 1
        priority:
          type: integer
          description: Priority (1-10)
          format: int32
          example: 2
        enable:
          type: boolean
          description: Enable flag
          example: false
          default: false
        operator:
          type: string
          description: |
            条件
              * LT Less than
              * LE Less than or equal to
              * GT Greater than
              * GE Greater than or equal to
              * EQ Equal to
          example: EQ
          enum:
          - LT
          - LE
          - GT
          - GE
          - EQ
        limitValue:
          type: string
          description: "Limit value (numeric for numeric attributes, true/false for boolean attributes)"
          example: "11"
        deadBand:
          type: number
          description: Deadband value
          format: double
          example: 12
        deadBandType:
          type: string
          description: |
            Deadband value type
              * NUMERIC Numeric type
              * PERCENT Percentage type
          example: NUMERIC
          enum:
          - NUMERIC
          - PERCENT
        comment:
          type: string
          description: Description
          example: Test data
        alarmType:
          type: string
          description: Alarm type
          example: Test alarm
      description: Information required to create attribute binding.
    CreateAttributeBinding:
      title: CreateAttributeBinding
      required:
      - bindType
      type: object
      properties:
        bindType:
          type: string
          description: |
            Binding type
              * STATISTIC_ABSOLUTE Absolute time statistics, only supports properties of the physical template instance that include inherited properties; only supports numeric (INTEGER/LONG/FLOAT/DOUBLE/DECIMAL) properties
              * EXPRESSION Expression
          example: EXPRESSION
          enum:
          - STATISTIC_ABSOLUTE
          - EXPRESSION
        expressionBindRelation:
          $ref: '#/components/schemas/ExpressionBindRelation'
        statisticBindRelation:
          $ref: '#/components/schemas/StatisticBindRelation'
      description: Information required to create attribute binding
    ExpressionBindRelation:
      title: ExpressionBindRelation
      required:
      - expression
      type: object
      properties:
        expression:
          maxLength: 5000
          type: string
          description: Expression
          example: PROP("system.t2.instance2.system.p1") + 1.1
      description: Expression binding information
    StatisticBindRelation:
      title: StatisticBindRelation
      required:
      - sourceAttributeFullPath
      description: Aggregation statistics information, can only be created for instance attributes.
      allOf:
      - $ref: '#/components/schemas/BaseStatisticBindRelation'
      - type: object
        properties:
          sourceAttributeFullPath:
            type: string
            description: Source attribute full path. When it is an attribute of an instance under the collector template/link template, the format is instance alias.attribute alias; otherwise, the format is template namespace.template alias.instance alias.attribute namespace.attribute alias.
            example: system.t1.i1.system.p1
    BaseStatisticBindRelation:
      title: BaseStatisticBindRelation
      required:
      - startTime
      - statisticFunction
      - statisticPeriod
      - statisticPeriodUnit
      type: object
      properties:
        startTime:
          type: string
          description: "End time (must be greater than the start time). The time format is determined by the request header. For details, refer to the usage guide - object modeling time data specification."
          format: date-time
          example: 2020-12-15T02:56:51Z
        endTime:
          type: string
          description: "Start time (must be less than the end time). The time format is determined by the request header. For details, refer to the usage guide - object modeling time data specification."
          format: date-time
          example: 2020-12-15T02:56:50Z
        enableMarkPeriod:
          type: boolean
          description: "Whether to enable marking period. When enabled, time cannot be enabled （enableTriggerTime=true）"
          example: false
          default: false
        markPeriodType:
          type: string
          description: |
            Marking period type. Required when marking period is enabled.
              * ADVANCE Advance
              * DELAY Delay
          example: ADVANCE
          enum:
          - ADVANCE
          - DELAY
        markPeriodValue:
          maximum: 2147483647
          minimum: 0
          exclusiveMinimum: true
          type: integer
          description: "Marking period type. Required when marking period is enabled."
          format: int32
          example: 30
        statisticPeriod:
          maximum: 2147483647
          minimum: 0
          exclusiveMinimum: true
          type: integer
          description: Statistical period value
          format: int32
          example: 30
        statisticPeriodUnit:
          type: string
          description: |
            Statistical period units
              * MINUTE Minute
              * HOUR Hour
              * DAY Day
          example: HOUR
          enum:
          - MINUTE
          - HOUR
          - DAY
        statisticFunction:
          type: string
          description: |
            统计方式
              * INS Instantaneous value
              * MAX Maximum value
              * MIN Minimum value
              * AVERAGE Average value
              * SUM Sum value
              * SUBTRACT Subtract value
          example: MAX
          enum:
          - INS
          - MAX
          - MIN
          - AVERAGE
          - SUM
          - SUBTRACT
        insValueType:
          type: string
          description: |
            Instant value statistical method, required when statisticFunction=INS
              * START_TIME Start time for statistics
              * END_TIME End time for statistics
          example: START_TIME
          enum:
          - START_TIME
          - END_TIME
        enableTriggerTime:
          type: boolean
          description: Whether to store the trigger time. Effective when statisticFunction=INS (instant time), MAX (maximum value time), MIN (minimum value time)
          example: false
        zeroRule:
          type: boolean
          description: "Return to zero rule. Effective when statisticFunction=SUBTRACT"
          example: false
      description: Aggregation statistical information
    AlertAckDto:
      title: AlertAckDto
      required:
      - userName
      type: object
      properties:
        ackAll:
          type: boolean
          description: Whether to acknowledge all alarms
          example: false
          default: false
        userName:
          type: string
          description: Name of the person acknowledging the alarms
          example: Zhang San
        fullNames:
          type: array
          description: List of instance IDs + alarm aliases triggered
          items:
            type: string
            example: 11401uuid08fb884b9a4743d08464e95c64074d09
      description: Alarm acknowledgment information
    AndModel:
      title: AndModel
      type: object
      properties:
        timestamp:
          $ref: '#/components/schemas/TimestampModel'
      description: Historical data time condition
    AttributeValueDto:
      title: AttributeValueDto
      type: object
      properties:
        attributeName:
          type: string
          description: Attribute alias
          example: p1
        attributeNamespace:
          type: string
          description: Attribute namespace
          example: system
        attributeValue:
          type: string
          description: Attribute value
          example: "123"
    BaseAttribute:
      title: BaseAttribute
      required:
      - dataType
      - displayName
      - enName
      - readWriteMode
      type: object
      properties:
        comment:
          maxLength: 1024
          type: string
          description: Description
          example: This is a test template
        dataType:
          type: string
          description: |
            Data type (OBJECT type only possible in queries, not available for creation in OpenAPI)
              * BOOLEAN Boolean type
              * STRING  String type
              * INTEGER Integer type
              * LONG    Long type
              * FLOAT   Float type
              * DOUBLE  Double type
              * DECIMAL Decimal type
              * FILE    File type
              * DATE    Date type
              * DATETIME Datetime type
              * OBJECT  Object type
              * SYSTEMCODE System code
          example: LONG
          enum:
          - BOOLEAN
          - INTEGER
          - LONG
          - FLOAT
          - DOUBLE
          - DATE
          - DATETIME
          - FILE
          - STRING
          - DECIMAL
          - OBJECT
          - SYSTEMCODE
        subDataType:
          maxLength: 200
          type: string
          description: "Sub data type, required when dataType is SYSTEMCODE, otherwise invalid"
          example: LONG
        dataTypePrecision:
          maximum: 38
          minimum: 0
          exclusiveMinimum: true
          type: integer
          description: "Precision of decimal type (1-38), required when dataType is DECIMAL, otherwise cannot be filled"
          format: int32
        dataTypeScale:
          minimum: 0
          type: integer
          description: "Decimal precision (0-value of dataTypeScale), required when dataType is DECIMAL, otherwise cannot be filled"
          format: int32
        defaultValue:
          maxLength: 1024
          type: string
          description: Default value
          example: "666"
        displayName:
          maxLength: 255
          type: string
          description: Name
          example: p1
        enName:
          type: string
          description: "Alias, instance attribute cannot exceed 128, template attribute cannot exceed 64"
          example: p1
        hasKeyRelation:
          type: boolean
          description: Whether it has an object key relationship (for display purposes, invalid for creation and modification)
          example: false
        historical:
          type: boolean
          description: "Whether to store historical values. Not applicable for DECIMAL/FILE/OBJECT types, required for others"
          example: false
          default: false
        persistent:
          type: boolean
          description: Whether it is persistent
          example: false
          default: false
        readWriteMode:
          type: string
          description: |
            Read-write mode
              * READ_ONLY Read-only
              * READ_WRITE Read-write
          example: READ_ONLY
          enum:
          - READ_ONLY
          - READ_WRITE
        stringMaxLength:
          minimum: 0
          exclusiveMinimum: true
          type: integer
          description: "Maximum length of string (1-16777215), required when dataType is STRING, otherwise cannot be filled"
          format: int32
        valueScale:
          minimum: 0
          type: integer
          description: "Value decimal precision, required for FLOAT (0-6)/DOUBLE (0-15)/DECIMAL (0-value of dataTypeScale), otherwise cannot be filled"
          format: int32
          example: 2
      description: Basic attribute information
    DisplayBaseAttribute:
      title: DisplayBaseAttribute
      description: Display basic attribute information
      allOf:
      - $ref: '#/components/schemas/BaseAttribute'
      - type: object
        properties:
          id:
            type: integer
            description: id
            format: int64
            example: 12345
          templateId:
            type: integer
            description: Template ID
            format: int64
            example: 12222
          sourceFunctionSetId:
            type: integer
            description: Function set ID
            format: int64
            example: 12221
          instanceId:
            type: string
            description: Instance ID
            example: "12223"
          labelIds:
            type: array
            description: Labels
            items:
              type: integer
              format: int64
              example: 11111
          deletable:
            type: boolean
            description: Whether it can be deleted
            example: true
          editable:
            type: boolean
            description: Whether it can be edited
            example: true
          max:
            type: integer
            description: Maximum value
            format: int64
            example: 100
          min:
            type: integer
            description: Minimum value
            format: int64
            example: 0
          maxValue:
            type: number
            description: Upper limit
            format: float
            example: 100.88
          minValue:
            type: number
            description: Lower limit
            format: float
            example: 0.88
          namespace:
            type: string
            description: Namespace
            example: system
          unit:
            type: string
            description: Unit
            example: kg
          templateName:
            type: string
            description: Template alias
            example: Template_12
          templateNamespace:
            type: string
            description: Template namespace
            example: system
          unique:
            type: boolean
            description: Whether it is unique
            example: false
            default: false
          display:
            type: boolean
            description: Whether it is the main display field
            example: false
            default: false
    TemplateOperation:
      title: TemplateOperation
      type: object
      properties:
        editable:
          type: boolean
          description: Whether users can modify template metadata
          example: true
        deletable:
          type: boolean
          description: Whether users can delete template metadata
          example: true
        instanceCreatable:
          type: boolean
          description: Whether instance creation is supported
          example: true
        instanceQueryable:
          type: boolean
          description: Whether instance querying is supported
          example: true
        supportInstanceMetadata:
          type: boolean
          description: Whether users can operate on instance metadata
          example: true
        templateCreatable:
          type: boolean
          description: Whether users can create instances
          example: true
        templateEditable:
          type: boolean
          description: Whether users can operate on template metadata
          example: true
        templateQueryable:
          type: boolean
          description: Whether users can query instances
          example: true
      description: Template-related permissions
    BriefTemplate:
      title: BriefTemplate
      required:
      - displayName
      - enName
      description: Basic information for template display
      allOf:
      - $ref: '#/components/schemas/TemplateOperation'
      - type: object
        properties:
          comment:
            type: string
            description: Description
            example: This is a test template
          displayName:
            maxLength: 128
            type: string
            description: Name
            example: t1
          enName:
            maxLength: 64
            type: string
            description: Alias
            example: t1
          id:
            type: integer
            description: id
            format: int64
            example: 12345
          namespace:
            type: string
            description: Namespace
            example: system
    CreateBaseAttribute:
      title: CreateBaseAttribute
      required:
      - appAccessMode
      description: Create attribute
      allOf:
      - $ref: '#/components/schemas/BaseAttribute'
      - type: object
        properties:
          appAccessMode:
            type: string
            description: |
              Whether it is visible to other apps
                * PUBLIC  Public
                * PRIVATE Private
            example: PUBLIC
            enum:
            - PUBLIC
            - PRIVATE
          appName:
            maxLength: 128
            type: string
            description: This field name is incorrect and has been deprecated. Please use the 'appId' field. The current version is still valid and has the same functionality as 'appId'.
            example: system
            deprecated: true
          appId:
            maxLength: 128
            type: string
            description: Unique identifier for the app, the ID of the app to which the attribute belongs. Either appName or appId must be non-empty.
            example: system
          appShowName:
            maxLength: 255
            type: string
            description: "App display name, for display only, not applicable during creation"
            example: system
          namespace:
            maxLength: 64
            type: string
            description: Namespace
            example: system
            default: system
          max:
            type: integer
            description: Upper limit of the range
            format: int64
            example: 100
          min:
            type: integer
            description: Lower limit of the range
            format: int64
            example: 0
          maxValue:
            type: number
            description: Upper limit
            format: float
            example: 100.88
          minValue:
            type: number
            description: Lower limit
            format: float
            example: 0.88
          unit:
            maxLength: 64
            type: string
            description: Unit
            example: kg
          compress:
            type: boolean
            description: Whether to configure compression parameters (effective when selecting historical values)
            example: true
          paramValue:
            maxLength: 255
            type: string
            description: Parameter value (effective when compress = true)
            example: "0.2"
          paramUnit:
            maxLength: 32
            type: string
            description: "Parameter unit (effective when compress = true), available units: %, engineering parameter"
            example: '%'
            enum:
            - '%'
            - Parameters
          maxRisingPeriod:
            type: integer
            description: "Maximum rising period (effective when compress = true), unit (seconds)"
            format: int32
            example: 600
          labelIds:
            maxItems: 100
            type: array
            description: Labels
            items:
              type: integer
              format: int64
              example: 12333
    CreateInstanceAttribute:
      title: CreateInstanceAttribute
      description: Create instance extended attribute
      allOf:
      - $ref: '#/components/schemas/CreateBaseAttribute'
      - type: object
        properties:
          attributeBindRelation:
            $ref: '#/components/schemas/CreateAttributeBinding'
    CreateTemplateAttribute:
      title: CreateTemplateAttribute
      allOf:
      - $ref: '#/components/schemas/CreateBaseAttribute'
      - type: object
        properties:
          unique:
            type: boolean
            description: Whether it is unique (this field is deprecated and no longer effective)
            example: false
            deprecated: true
            default: false
          display:
            type: boolean
            description: "Whether it is the main display field. Not applicable to entity template attributes"
            example: false
            default: false
    AbstractAlarm:
      title: AbstractAlarm
      required:
      - displayName
      - limitValue
      - operator
      type: object
      properties:
        displayName:
          maxLength: 64
          type: string
          description: Name
          example: Alarm 1
        priority:
          maximum: 10
          minimum: 1
          type: integer
          description: Priority (between 1 and 10)
          format: int32
          example: 2
        enable:
          type: boolean
          description: Enable flag
          example: false
          default: false
        operator:
          type: string
          description: |
            Condition (only EQ is applicable when the attribute is Boolean)
              * LT Less than
              * LE Less than or equal to
              * GT Greater than
              * GE Greater than or equal to
              * EQ Equal to
          example: EQ
          enum:
          - LT
          - LE
          - GT
          - GE
          - EQ
        limitValue:
          type: string
          description: " Limit value (numeric for numeric attributes, true/false for boolean attributes)"
          example: "11"
        deadBand:
          type: number
          description: Deadband value
          format: double
          example: 12
          default: 0
        deadBandType:
          type: string
          description: |
            Deadband value type
              * NUMERIC Numeric type
              * PERCENT Percentage
          example: NUMERIC
          default: NUMERIC
          enum:
          - NUMERIC
          - PERCENT
        comment:
          maxLength: 1024
          type: string
          description: Description
          example: Test data
        alarmType:
          maxLength: 128
          type: string
          description: Alarm type
          example: Test alarm
      description: Basic information of alarms 
    CreateAlarm:
      title: CreateAlarm
      type: object
      description: Create an alarm
      allOf:
      - $ref: '#/components/schemas/AbstractAlarm'
      - type: object
    CreateTemplateAttributeWithAlarm:
      title: CreateTemplateAttributeWithAlarm
      description: Create an attribute and its alarm
      allOf:
      - $ref: '#/components/schemas/CreateTemplateAttribute'
      - type: object
        properties:
          alarms:
            type: array
            items:
              $ref: '#/components/schemas/CreateAlarm'
    CreateEvent:
      title: CreateEvent
      required:
      - appAccessMode
      - dataSetId
      - displayName
      - enName
      type: object
      properties:
        appAccessMode:
          type: string
          description: |
            Whether it can be seen in other apps
              * PUBLIC  publicly-owned
              * PRIVATE privately-owned
          example: PUBLIC
          enum:
          - PUBLIC
          - PRIVATE
        appName:
          maxLength: 128
          type: string
          description: This field name is incorrect and has been deprecated. Please use the 'appId' field. The current version is still valid and has the same functionality as 'appId'.
          example: system
          deprecated: true
        appId:
          maxLength: 128
          type: string
          description: The unique identifier of the app to which the attribute belongs. Either appName or appId must be non-empty.
          example: system
        comment:
          type: string
          description: Description
          example: test data
        dataSetId:
          type: integer
          description: Data set ID
          format: int64
          example: 501
        displayName:
          maxLength: 128
          type: string
          description: Name
          example: event1
        enName:
          maxLength: 64
          type: string
          description: Alias
          example: event1
        labelIds:
          type: array
          description: Label
          items:
            type: integer
            format: int64
            example: 11131
        namespace:
          maxLength: 64
          type: string
          description: Namespace
          example: system
          default: system
      description: Create event
    CreateService:
      title: CreateService
      required:
      - appAccessMode
      - displayName
      - enName
      type: object
      properties:
        appAccessMode:
          type: string
          description: |
            Whether it can be seen in other apps
              * PUBLIC  publicly-owned
              * PRIVATE privately-owned
          example: PUBLIC
          enum:
          - PUBLIC
          - PRIVATE
        appName:
          maxLength: 128
          type: string
          description: This field name is incorrect and has been deprecated. Please use the 'appId' field. The current version is still valid and has the same functionality as 'appId'.
          example: system
          deprecated: true
        appId:
          maxLength: 128
          type: string
          description: App unique identifier, the ID of the app to which the event belongs. At least one of appName and appId must not be empty.
          example: system
        comment:
          type: string
          description: Description
          example: test data
        displayName:
          maxLength: 128
          type: string
          description: Name
          example: service1
        enName:
          maxLength: 64
          type: string
          description: Alias
          example: service1
        inputs:
          type: array
          description: Input
          items:
            $ref: '#/components/schemas/Filed'
        labelIds:
          type: array
          description: Label
          items:
            type: integer
            format: int64
            example: 11132
        namespace:
          maxLength: 64
          type: string
          description: Namespace
          example: system
          default: system
        out:
          $ref: '#/components/schemas/Filed'
        script:
          type: string
          description: script
          example: print('1');
      description: Create service
    CreateSubscription:
      title: CreateSubscription
      description: Create subscription
      allOf:
      - $ref: '#/components/schemas/BaseSubscription'
      - type: object
        properties:
          appName:
            maxLength: 128
            type: string
            description: This field name is incorrect and has been deprecated. Please use the 'appId' field. The current version is still valid and has the same functionality as 'appId'.
            example: system
            deprecated: true
          appId:
            maxLength: 128
            type: string
            description: Unique identifier for the app, the ID of the app to which the attribute belongs. Either appName or appId must be non-empty.
            example: system
          timingTrigger:
            $ref: '#/components/schemas/CreateTimingTrigger'
          eventTriggers:
            maxItems: 20
            type: array
            description: "事件触发信息,当triggerType为EVENT必填;不可和timingTrigger同时使用"
            items:
              $ref: '#/components/schemas/BaseEventTrigger'
    BaseEventTrigger:
      title: BaseEventTrigger
      required:
      - eventId
      - instanceId
      - templateId
      type: object
      properties:
        attributeId:
          type: integer
          description: Attribute ID
          format: int64
          example: 11134
        eventId:
          type: integer
          description: Event ID
          format: int64
          example: 11135
        instanceId:
          maxLength: 64
          type: string
          description: Instance ID
          example: "11136"
        templateId:
          type: integer
          description: Template ID
          format: int64
          example: 11137
      description: Create subscription time trigger
    CreateTimingTrigger:
      title: CreateTimingTrigger
      required:
      - enable
      - periodMs
      - start
      type: object
      properties:
        enable:
          type: boolean
          description: Whether it is enabled
          example: false
        end:
          type: string
          description: End time (must be greater than the start time)
          format: date-time
          example: 2020-12-15T02:56:51Z
        periodMs:
          type: integer
          description: Time interval (in seconds)
          format: int64
          example: 60
        start:
          type: string
          description: Start time (must be less than the end time)
          format: date-time
          example: 2020-12-15T02:56:50Z
      description: Create subscription time trigger
    Filed:
      title: Filed
      required:
      - appAccessMode
      - dataType
      - displayName
      - enName
      type: object
      properties:
        appAccessMode:
          type: string
          description: |
            Whether it can be seen in other apps
              * PUBLIC  publicly-owned
              * PRIVATE privately-owned
          example: PUBLIC
          enum:
          - PUBLIC
          - PRIVATE
        appName:
          maxLength: 128
          type: string
          description: This field name is incorrect and has been deprecated. Please use the 'appId' field. The current version is still valid and has the same functionality as 'appId'.
          example: system
          deprecated: true
        appId:
          maxLength: 128
          type: string
          description: Unique identifier for the app, the ID of the app to which the attribute belongs. Either appName or appId must be non-empty.
          example: system
        comment:
          type: string
          description: Description
          example: test data
        dataType:
          type: string
          description: |
            Field type
              * BOOLEAN Boolean type (optional for input) (optional for output)
              * INTEGER Integer type (optional for input) (optional for output)
              * LONG Long integer type (optional for input) (optional for output)
              * FLOAT Float type (optional for input) (optional for output)
              * DOUBLE Double precision float type (optional for input) (optional for output)
              * DATETIME Datetime type (optional for output)
              * STRING String type (optional for input) (optional for output)
              * DATASTRUCT Data structure type (optional for input)
              * JSON     JSON type (optional for output)
              * DECIMAL  High-precision float type (optional for output)
          enum:
          - BOOLEAN
          - INTEGER
          - LONG
          - FLOAT
          - DOUBLE
          - DATETIME
          - STRING
          - DATASTRUCT
          - JSON
          - DECIMAL
        defaultValue:
          type: string
          description: Default value
        displayName:
          maxLength: 128
          type: string
          description: Name
          example: filed1
        enName:
          maxLength: 64
          type: string
          description: Alias
          example: filed1
        id:
          type: integer
          description: "ID (for display, can be omitted during creation)"
          format: int64
          example: 11135
        jsonDesc:
          type: string
          description: "Format description in JSON format, must comply with JSON specification"
          example: "{'name':'string'}"
        namespace:
          maxLength: 64
          type: string
          description: Namespace
          example: system
          default: system
        referDataDisplayName:
          type: string
          description: "Display name of the referenced data set (for display, can be omitted during creation)"
          example: ds1
        referDataSetEnName:
          type: string
          description: "Alias of the referenced data set (for display, can be omitted during creation)"
          example: ds1
        referDataSetId:
          type: integer
          description: "ID of the referenced data set, applicable when the type is DATASTRUCT"
          format: int64
          example: 12222
        required:
          type: boolean
          description: "Whether it is required, invalid for output parameters"
          example: false
    CurrentAlert:
      title: CurrentAlert
      type: object
      properties:
        ackDatatimestamp:
          type: integer
          description: Acknowledgment time (timestamp)
          format: int64
          example: 1614670680298
        ackStatus:
          type: integer
          description: |
            Alaem acknowledgment status
              * 0 Alarm not acknowledged
              * 1 Alarm acknowledged
          format: int32
          example: 0
          enum:
          - 1
          - 0
        ackUserName:
          type: string
          description: Name of the user who acknowledged the alarm
          example: Zhang San
        alertName:
          type: string
          description: Alarm name
          example: uuidde2d4cfaf5af4abe830387fbfe3e0bbf
        alertType:
          type: string
          description: |
            Alarm condition
              * LT Less than
              * LE Less than or equal to
              * GT Greater than
              * GE Greater than or equal to
              * EQ Equal to
          example: EQ
          enum:
          - LT
          - LE
          - GT
          - GE
          - EQ
        description:
          type: string
          description: Description
          example: This is a test alarm
        disappearedDatatimestamp:
          type: integer
          description: Alarm disappearance time (timestamp)
          format: int64
          example: 1614583659860
        fullName:
          type: string
          description: Full name (instance ID concatenated with alarm alias)
          example: 10801uuidde2d4cfaf5af4abe830387fbfe3e0bbf
        id:
          type: integer
          description: Real-time alarm ID
          format: int64
          example: 11111
        newValue:
          type: string
          description: Value at the time the alarm was triggered
          example: "11"
        oldValue:
          type: string
          description: Value before the alarm was triggered
          example: "9"
        priority:
          type: integer
          description: Priority (1-10)
          format: int32
          example: 5
        showName:
          type: string
          description: Alarm display name
          example: a1
        source:
          type: string
          description: Alias of the instance that triggered the alarm
          example: instance1
        sourcePropShowName:
          type: string
          description: Name of the attribute where the alarm occurred
          example: attribute1
        sourcePropertyName:
          type: string
          description: Alias of the attribute where the alarm occurred
          example: attribute1
        sourceShowName:
          type: string
          description: Name of the instance that triggered the alarm
          example: instance1
        startDatatimestamp:
          type: integer
          description: Alarm start time (timestamp)
          format: int64
          example: 1614583559860
        status:
          type: integer
          description: |
            Alarm status
              * 1 Alarm triggered
              * 0 Alarm disappeared
          format: int32
          example: 1
          enum:
          - 1
          - 0
        valType:
          type: integer
          description: |
            Number corresponding to the attribute type
              * 0 double
              * 1 float
              * 2 long
              * 3 int
              * 4 boolean
              * 5 string
          format: int32
          example: 0
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
      description: Alarm data details
    DisplayInstance:
      title: DisplayInstance
      type: object
      properties:
        appAccessMode:
          type: string
          description: |
            Whether it can be seen in other apps
              * PUBLIC  publicly-owned
              * PRIVATE privately-owned
          example: PUBLIC
          enum:
          - PUBLIC
          - PRIVATE
        appName:
          maxLength: 128
          type: string
          description: This field name is incorrect and has been deprecated. Please use the appId field. It is still valid in the current version, and its functionality is the same as appId.
          example: system
          deprecated: true
        appId:
          maxLength: 128
          type: string
          description: Unique identifier of the app to which the instance belongs
          example: system
        displayAttributeValues:
          type: array
          description: Values of the main display fields
          items:
            type: string
            example: "456"
        id:
          type: string
          description: id
          example: "11111"
        labels:
          type: array
          description: Label IDs and Names
          items:
            $ref: '#/components/schemas/IdDisplayName'
        template:
          $ref: '#/components/schemas/BriefTemplate'
      description: Instance details
    DisplayTemplate:
      title: DisplayTemplate
      description: Template display information
      allOf:
      - $ref: '#/components/schemas/TemplateOperation'
      - type: object
        properties:
          appAccessMode:
            maxLength: 16
            type: string
            description: |
              Whether it can be seen in other apps
                * PUBLIC  pubilcly-owned
                * PRIVATE privately-owned
            example: PUBLIC
            enum:
            - PUBLIC
            - PRIVATE
          appName:
            maxLength: 128
            type: string
            description: This field name is incorrect and has been deprecated. Please use the appId field. Functionality is the same as appId.
            example: system
            deprecated: true
          appId:
            maxLength: 128
            type: string
            description: Unique identifier of the app to which the instance belongs
            example: system
          comment:
            maxLength: 1024
            type: string
            description: Description
            example: This is a test template
          displayAttributes:
            maxItems: 100
            type: array
            items:
              $ref: '#/components/schemas/WithIdDisplayNameTemplateId'
          displayName:
            maxLength: 128
            type: string
            description: Name
            example: t1
          enName:
            maxLength: 64
            type: string
            description: Alias
            example: t1
          fileName:
            maxLength: 255
            type: string
            description: Icon file name
            example: boatxxx.png
          functionSets:
            maxItems: 100
            type: array
            description: Function set IDs and Names
            items:
              $ref: '#/components/schemas/IdDisplayName'
          iconPath:
            maxLength: 255
            type: string
            description: Icon path
            example: /api/config/download?fileName=2021-03-02/1614673872183/boatxxx.png
          id:
            minimum: 1
            type: integer
            description: id
            format: int64
            example: 11111
          labels:
            maxItems: 100
            type: array
            description: Label IDs and name
            items:
              $ref: '#/components/schemas/IdDisplayName'
          mark:
            minimum: 0
            type: integer
            format: int32
          namespace:
            maxLength: 64
            type: string
            description: Namespace
            example: system
          parent:
            $ref: '#/components/schemas/IdDisplayName'
          type:
            maxLength: 16
            type: string
            description: |
              Template type
                * ROOT Root template type
                * INTERNAL Internal template type
                * EXTERNAL External template type
                * RELATION Relation template type
                * ENTITY Entity template type
                * FORM   Form template type
                * REMOTE Remote template type
                * COLLECTOR  Collector template type
                * MAPPING  Mapping template type
            example: ENTITY
            enum:
            - ROOT
            - INTERNAL
            - EXTERNAL
            - RELATION
            - ENTITY
            - FORM
            - REMOTE
            - COLLECTOR
            - MAPPING
    EntityInstanceForCreating:
      title: EntityInstanceForCreating
      required:
      - appAccessMode
      type: object
      properties:
        appAccessMode:
          type: string
          description: |
            Whether it can be seen in other apps
              * PUBLIC  publicly-owned
              * PRIVATE privately-owned
          example: PUBLIC
          enum:
          - PUBLIC
          - PRIVATE
        appName:
          maxLength: 128
          type: string
          description: This field name is incorrect and has been deprecated. Please use the appId field. Functionality is the same as appId.
          example: system
          deprecated: true
        appId:
          maxLength: 128
          type: string
          description: Unique identifier of the app to which the template belongs
          example: system
        attributeValues:
          type: array
          description: Inherited attribute values
          items:
            $ref: '#/components/schemas/AttributeValueDto'
        code:
          type: string
          description: code
          example: xxxxx
        comment:
          type: string
          description: Description
          example: Creating a test instance
        displayName:
          type: string
          description: " Display name (required for entity template instance)"
          example: instance1
        enName:
          type: string
          description: "Alias (required for entity template instance)"
          example: instance1
        functionSetIds:
          type: array
          description: Function set IDs
          items:
            type: integer
            format: int64
            example: 12222
        iconPath:
          type: string
          description: icon
          example: /api/config/download?fileName=2021-03-02/1614673872183/boatxxx.png
        labelIds:
          type: array
          description: Label
          items:
            type: integer
            format: int64
            example: 13333
      description: Create a normal template instance
    EntityInstanceForUpdating:
      title: EntityInstanceForUpdating
      required:
      - appAccessMode
      type: object
      properties:
        appAccessMode:
          type: string
          description: |
            Whether it can be seen in other apps
              * PUBLIC  publicly-owned
              * PRIVATE privately-owned
          example: PUBLIC
          enum:
          - PUBLIC
          - PRIVATE
        attributeValues:
          type: array
          description: Inherited attribute values
          items:
            $ref: '#/components/schemas/AttributeValueDto'
        code:
          type: string
          description: code
          example: xxxxx
        comment:
          type: string
          description: Description
          example: Modifying the entity template instance
        displayName:
          type: string
          description: Display name
          example: updateInsatnce1
        functionSetIds:
          type: array
          description: Function set IDs
          items:
            type: integer
            format: int64
            example: 12222
        iconPath:
          type: string
          description: Icon path
          example: /api/config/download?fileName=2021-03-02/1614673872183/boatxxx.png
        labelIds:
          type: array
          description: Label
          items:
            type: integer
            format: int64
            example: 12223
        needSetPropertyVqtValue:
          type: boolean
          description: "Whether to set real-time values. Only when set to true, the corresponding values can be queried in the page and service. By default, only the values in the database are updated."
          example: false
          default: false
        needSetMetadata:
          type: boolean
          description: "Whether to update only metadata. When set to false, the function set, label, and other instance fields are invalid, and all attribute information and corresponding values are placed in the attributeValues field."
          example: false
          default: true
      description: Update a normal template instance
    TemplateForCreating:
      title: TemplateForCreating
      required:
      - appAccessMode
      - displayName
      - enName
      - parentId
      - type
      type: object
      properties:
        appAccessMode:
          type: string
          description: |
            Whether it can be seen in other apps
            * PUBLIC  publicly-owned
            * PRIVATE privately-owned
          example: PUBLIC
          enum:
          - PUBLIC
          - PRIVATE
        appName:
          maxLength: 128
          type: string
          description: This field name is incorrect and has been deprecated. Please use the 'appId' field. The current version is still valid and has the same functionality as 'appId'.
          example: system
          deprecated: true
        appId:
          maxLength: 128
          type: string
          description: Unique identifier for the app, the ID of the app to which the attribute belongs. Either appName or appId must be non-empty.
          example: system
        comment:
          type: string
          description: Description
          example: Template created
        displayAttributes:
          type: array
          description: Main Display Field ID
          items:
            type: integer
            format: int64
            example: 14444
        displayName:
          maxLength: 128
          type: string
          description: Name
          example: t1
        enName:
          maxLength: 64
          type: string
          description: Alias
          example: t1
        fileName:
          type: string
          description: Icon Name (For display only. Can skip filling it when creating an account)
          example: boatxxx.png
        functionSetIds:
          type: array
          description: 功能集Function set ID and name合id列表
          items:
            type: integer
            format: int64
            example: 10016
        iconPath:
          type: string
          description: Icon path
          example: /api/config/download?fileName=2021-03-02/1614673872183/boatxxx.png
        labelIds:
          type: array
          description: Label ID list
          items:
            type: integer
            format: int64
            example: 10017
        namespace:
          maxLength: 64
          type: string
          description: Namespace
          example: system
          default: system
        parentId:
          type: integer
          description: Parent Template id
          format: int64
          example: 10018
        type:
          type: string
          description: |
            Template type (the same as the parent template)
              * ENTITY entity template
              * FORM form template
          example: ENTITY
          enum:
          - ENTITY
          - FORM
        dataUsedBy:
          type: string
          description: |
            The nature of data usage. If not specified, it will search within all scopes.
              * SYSTEM Data with template metadata created by internal services.
              * USER Data with template metadata created by users.
          example: USER
          default: USER
          enum:
          - SYSTEM
          - USER
      description: Create template
    WholeNormalTemplateDtoForCreating:
      title: WholeNormalTemplateDtoForCreating
      allOf:
      - $ref: '#/components/schemas/TemplateForCreating'
      - type: object
        properties:
          attributeDtos:
            type: array
            items:
              $ref: '#/components/schemas/CreateTemplateAttributeWithAlarm'
          eventDtos:
            type: array
            items:
              $ref: '#/components/schemas/CreateEvent'
          serviceDtos:
            type: array
            items:
              $ref: '#/components/schemas/CreateService'
          subscriptionDtos:
            type: array
            items:
              $ref: '#/components/schemas/CreateSubscription'
    TemplateForUpdating:
      title: TemplateForUpdating
      required:
      - appAccessMode
      type: object
      properties:
        appAccessMode:
          type: string
          description: |
            Whether it can be seen in other apps
            * PUBLIC  publicly-owned
            * PRIVATE privately-owned
          example: PUBLIC
          enum:
          - PUBLIC
          - PRIVATE
        comment:
          type: string
          description: Description
          example: Modified template
        displayAttributes:
          type: array
          description: Main display field IDs
          items:
            type: integer
            format: int64
            example: 12349
        displayName:
          type: string
          description: Name
          example: updatet1
        functionSetIds:
          type: array
          description: Function set ID list
          items:
            type: integer
            format: int64
            example: 12344
        iconPath:
          type: string
          description: Icon path
          example: /api/config/download?fileName=2021-03-02/1614673872183/boatxxx.png
        id:
          type: integer
          description: ID obtained from the template information on the path will override
          format: int64
          example: 12345
        labelIds:
          type: array
          description: Label ID list
          items:
            type: integer
            format: int64
            example: 12343
      description: Template update
    HistoryDetail:
      title: HistoryDetail
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/HistorySeries'
        unauthorized:
          type: array
          description: Unauthorized attributes
          items:
            type: string
            example: system.testExcel.Instance_53.system.p11
        notExsistAtrributes:
          type: array
          description: Non-existent attributes
          items:
            type: string
            example: system.testExcel.Instance_53.system.p1x
      description: Query result entity for data history
    DisplayRelationDto:
      title: DisplayRelationDto
      type: object
      properties:
        displayName:
          type: string
          description: Name
          example: realtion1
        enName:
          type: string
          description: Alias
          example: relation1
        id:
          type: integer
          description: id
          format: int64
          example: 11111
        namespace:
          type: string
          description: Namespace
          example: system
        nodes:
          type: array
          description: List of referenced templates
          items:
            $ref: '#/components/schemas/DisplayRelationNodeDto'
        templateInfo:
          $ref: '#/components/schemas/LongIdDisplayNameWithFullName'
      description: Relation association
    DisplayRelationNodeDto:
      title: DisplayRelationNodeDto
      type: object
      properties:
        main:
          type: boolean
          description: Whether it is the main object
          example: false
        refAttributeDataType:
          type: string
          description: |
            Referenced attribute type
              * BOOLEAN Boolean type
              * STRING  String type
              * INTEGER Integer type
              * LONG    Long type
              * FLOAT   Float type
              * DOUBLE  Double type
              * DECIMAL Decimal type
              * FILE    File type
              * DATE    Date type
              * DATETIME Datetime type
              * OBJECT  Object type
              * SYSTEMCODE System code
          example: LONG
          enum:
          - BOOLEAN
          - INTEGER
          - LONG
          - FLOAT
          - DOUBLE
          - DATE
          - DATETIME
          - FILE
          - STRING
          - DECIMAL
          - OBJECT
          - SYSTEMCODE
        refAttributeDisplayName:
          type: string
          description: Referenced attribute name
          example: attribute1
        logicColumnName:
          type: string
          description: Column name corresponding to the node
          example: system_template1_attribute1
        refAttributeEnName:
          type: string
          description: Referenced attribute alias
          example: attribute1
        refAttributeId:
          type: integer
          description: Referenced attribute ID
          format: int64
          example: 11113
        refAttributeNamespace:
          type: string
          description: Referenced attribute namespace
          example: system
        refComment:
          type: string
          description: Reference description
          example: One end of the node
        refEnName:
          type: string
          description: Referenced English name
          example: system_template1
        refRelationDisplayName:
          type: string
          description: Referenced relation name
          example: system_relation2
        refRelationId:
          type: integer
          description: Referenced relation ID
          format: int64
          example: 11114
        refTemplateDisplayName:
          type: string
          description: Referenced template name
          example: template1
        refTemplateEnName:
          type: string
          description: Referenced template alias
          example: template1
        refTemplateId:
          type: integer
          description: Template ID
          format: int64
          example: 11115
        refTemplateNamespace:
          type: string
          description: Referenced template namespace
          example: system
      description: Referenced template
    HistoryFill:
      title: HistoryFill
      type: object
      properties:
        strategy:
          type: string
          description: |
            Fill strategy
              * previous If there is no value in the current window, fill with the value from the previous window.
              * line Fill with a straight line based on the previous and next points, i.e., the values within the window are the same.
              * linear Same as line.
              * none Do not fill.
          example: previous
          default: none
          enum:
          - previous
          - line
          - linear
          - none
      description: Historical data filtering conditions
    HistoryGroup:
      title: HistoryGroup
      type: object
      properties:
        time:
          type: string
          description: "Window interval [, window offset]. Definition of windows (one time interval represents one window, for example, if defined as 1s, each window is 1 second; if defined as 1h, each window is 1 hour, window granularity is determined by the time interval). Seconds (s), minutes (m), hours (h), days (d). For example: 1h represents a window interval of one hour with no offset. 1h,1m represents a window interval of one hour with a one-minute offset."
          example: "5s,1s"
      description: Historical data grouping conditions
    HistoryQuery:
      title: HistoryQuery
      type: object
      properties:
        fill:
          $ref: '#/components/schemas/HistoryFill'
        groupBy:
          $ref: '#/components/schemas/HistoryGroup'
        limit:
          type: integer
          description: Number of elements to return (default is 1000)
          format: int32
          example: 1
        offset:
          type: integer
          description: "Offset, start querying from the specified number. For example, if offset is 5, start querying from the 6th item"
          format: int32
          example: 23
        order:
          type: string
          description: |
            Sorting rule (by time)
              * ASC Ascending
              * DESC Descending
          example: DESC
          enum:
          - ASC
          - DESC
        select:
          type: array
          items:
            type: string
            description: "Aggregation type. It can be passed in the format \"mean(\\\"system.testExcel.Instance_53.system.p1\\\")\", \"first(\\\"obj.prop\\\")\", or a single attribute like \"system.testExcel.Instance_53.system.p1\"."
            example: system.testExcel.Instance_53.system.p1
        where:
          $ref: '#/components/schemas/HistoryWhere'
      description: Historical data query entity
    HistorySeries:
      title: HistorySeries
      type: object
      properties:
        datas:
          type: array
          items:
            type: array
            items:
              type: object
              properties: {}
              description: Values corresponding to the fields in the data, such as \"2021-03-04T06:17:21Z\", 8.752326642929273, \"0\"
              example: {}
        fields:
          type: array
          items:
            type: string
            description: "Header and order of the data, including time: timestamp, value: historical value, status: status code, originalTime: timestamp (not always present)"
            example: time
        function:
          type: string
          description: Aggregation function type used
          example: first
        hasNext:
          type: boolean
          description: Whether there is a next page
          example: false
        name:
          type: string
          description: "Complete path of the attribute: template namespace.template alias.instance alias.attribute namespace.attribute alias"
          example: system.testExcel.Instance_53.system.p1
      description: Historical tag
    HistoryWhere:
      title: HistoryWhere
      type: object
      properties:
        and:
          $ref: '#/components/schemas/AndModel'
      description: Historical data query conditio
    IdDisplayName:
      title: IdDisplayName
      type: object
      properties:
        displayName:
          maxLength: 64
          type: string
          description: Name of a specific type (function set/tag/template) data
          example: Data 1
        id:
          minimum: 1
          type: integer
          format: int64
          example: 11119
    StringIdDisplayName:
      title: StringIdDisplayName
      type: object
      properties:
        displayName:
          maxLength: 64
          type: string
          description: Instance 1
          example: Data 1
        id:
          type: string
          description: Instance id
          example: "11119"
    InstanceAttributeWithBindRelation:
      title: InstanceAttributeWithBindRelation
      description: Basic information for displaying search attributes with bindings
      allOf:
      - $ref: '#/components/schemas/InstanceBaseAttribute'
      - type: object
        properties:
          instanceEnName:
            type: string
            description: Alias of the attribute's owning instance (returned when needInstanceInfo=true)
          instanceDisplayName:
            type: string
            description: Name of the attribute's owning instance (returned when needInstanceInfo=true)
          attributeBindRelation:
            $ref: '#/components/schemas/DisplayAttributeBindRelation'
    InstanceBaseAttribute:
      title: InstanceBaseAttribute
      description: Basic information for displaying instance attributes
      allOf:
      - $ref: '#/components/schemas/DisplayBaseAttribute'
      - type: object
        properties:
          existAlarm:
            type: boolean
            description: Whether an alarm exists
            example: false
          value:
            type: string
            description: Attribute value
    DisplayAttributeBindRelation:
      title: DisplayAttributeBindRelation
      properties:
        bindType:
          type: string
          description: |
            Binding type
              * STATISTIC_ABSOLUTE Statistic absolute
              * EXPRESSION Expression
          example: EXPRESSION
          enum:
          - STATISTIC_ABSOLUTE
          - EXPRESSION
        expressionBindRelation:
          $ref: '#/components/schemas/ExpressionBindRelation'
        statisticBindRelation:
          $ref: '#/components/schemas/BaseStatisticBindRelation'
        bindStatus:
          type: integer
          description: Binding status with three options. 0-Binding in progress; 1-Binding successful; 2-Binding failed
          format: int32
        bindErrMsg:
          type: string
          description: Binding error message
        displayBindRelationSourceAttributes:
          type: array
          description: Display names of all attribute sources for attribute bindings
          items:
            $ref: '#/components/schemas/DisplayBindRelationSourceAttribute'
      description: Basic information of attribute binding relationships
    DisplayBindRelationSourceAttribute:
      title: DisplayBindRelationSourceAttribute
      properties:
        sourceTemplate:
          $ref: '#/components/schemas/LongIdDisplayNameWithFullName'
        sourceFunctionSet:
          $ref: '#/components/schemas/LongIdDisplayNameWithFullName'
        sourceInstance:
          $ref: '#/components/schemas/StringIdDisplayNameWithEnName'
        sourceAttribute:
          $ref: '#/components/schemas/LongIdDisplayNameWithFullName'
      description: Display names of all attribute sources for attribute bindings
    DisplayEventDto:
      title: DisplayEventDto
      type: object
      properties:
        id:
          type: integer
          description: id
          format: int64
          example: 11139
        templateId:
          type: integer
          description: Template id
          format: int64
          example: 11140
        instanceId:
          type: string
          description: Instance ID
          example: "11141"
        functionSetId:
          type: integer
          description: Function set ID
          format: int64
          example: 11142
        dataSetId:
          type: integer
          description: Data set ID
          format: int64
          example: 11143
        dataSetDisplayName:
          type: string
          description: Data set DisplayName
          example: Value Change Event Data Set
        labelIds:
          type: array
          description: Label
          items:
            type: integer
            format: int64
            example: 11144
        appShowName:
          type: string
          description: appName
          example: system
        appName:
          maxLength: 128
          type: string
          description: This field name is incorrect and has been deprecated. Please use the 'appId' field. The usage is the same as 'appId'.
          example: system
          deprecated: true
        appId:
          maxLength: 128
          type: string
          description: App unique identifier, ID of the app to which the event belongs
          example: system
        namespace:
          type: string
          description: Namespace
          example: system
        sourceFunctionSetId:
          type: integer
          description: Source function set ID
          format: int64
          example: 11145
        displayName:
          maxLength: 128
          type: string
          description: Name
          example: event1
        enName:
          maxLength: 64
          type: string
          description: Alias
          example: event1
        comment:
          type: string
          description: Description
          example: test data
        appAccessMode:
          type: string
          description: |
            Whether it can be seen in other apps
            * PUBLIC  publicly-owned
            * PRIVATE privately-owned
          example: PUBLIC
          enum:
          - PUBLIC
          - PRIVATE
    InstanceLabelForBinding:
      title: InstanceLabelForBinding
      type: object
      properties:
        instanceId:
          type: string
          description: Instance ID, deprecated field, use the Instance ID obtained based on the path
          example: "10001"
          deprecated: true
        labelIds:
          type: array
          description: Labelid
          items:
            type: integer
            format: int64
            example: 12222
        relationId:
          type: integer
          description: "Relation ID, deprecated field"
          format: int64
          example: 12333
          deprecated: true
        templateId:
          type: integer
          description: "Template ID, deprecated field, use the Template ID obtained based on the path"
          format: int64
          example: 12332
          deprecated: true
      description: Instance label binding
    InstanceNamesLabelForUnbinding:
      title: InstanceNamesLabelForUnbinding
      type: object
      properties:
        instanceNames:
          type: array
          description: Instance aliases list
          items:
            type: string
            example: instance1
        labelIds:
          type: array
          description: Label id list
          items:
            type: integer
            format: int64
            example: 14444
      description: Instance label unbinding
    InstanceTable:
      title: InstanceTable
      type: object
      properties:
        data:
          type: array
          description: Instance data
          items:
            $ref: '#/components/schemas/InstanceData'
        titles:
          type: array
          description: Table headers
          items:
            $ref: '#/components/schemas/InstanceTitleItem'
        total:
          type: integer
          description: Number of instances
          format: int32
          example: 1000
        pageIndex:
          type: integer
          description: Page number
          format: int32
          example: 1
        pageSize:
          type: integer
          description: Number of data entries per page
          format: int32
          example: 20
      description: Instance list
    InstanceTitleItem:
      title: InstanceTitleItem
      type: object
      properties:
        name:
          type: string
          description: Column name
          example: system_en_name
        value:
          type: string
          description: Column display name (attribute name)
          example: Alias
        namespace:
          type: string
          description: Attribute namespace
          example: system
        enName:
          type: string
          description: Attribute alias
          example: enName
      description: Instance list header
    AbstractLabel:
      title: AbstractLabel
      required:
      - appAccessMode
      - displayName
      - enName
      type: object
      properties:
        appAccessMode:
          type: string
          description: |
            Whether it can be seen in other apps
              * PUBLIC  publicly-owned
              * PRIVATE privately-owned
          example: PUBLIC
          enum:
          - PUBLIC
          - PRIVATE
        appName:
          maxLength: 128
          type: string
          description: This field name is incorrect and has been deprecated. Please use the 'appId' field. The usage is the same as 'appId'.
          example: system
          deprecated: true
        appId:
          maxLength: 128
          type: string
          description: App unique identifier, ID of the app to which the event belongs
          example: system
        comment:
          type: string
          description: Description
          example: This is a test label
        displayName:
          maxLength: 128
          type: string
          description: Name
          example: Category 1
        enName:
          maxLength: 64
          type: string
          description: Alias
          example: labelCategory1
        namespace:
          maxLength: 64
          type: string
          description: Namespace
          example: system
          default: system
      description: Label basic information 
    LabelCategoryDetail:
      title: LabelCategoryDetail
      description: Label category detail
      allOf:
      - $ref: '#/components/schemas/AbstractLabel'
      - type: object
        properties:
          id:
            type: integer
            description: Category id
            format: int64
            example: 17777
    LabelCategoryForCreating:
      title: LabelCategoryForCreating
      description: Create label category
      allOf:
      - $ref: '#/components/schemas/AbstractLabel'
      - type: object
    LabelDetail:
      title: LabelDetail
      description: Label detail
      allOf:
      - $ref: '#/components/schemas/AbstractLabel'
      - type: object
        properties:
          id:
            type: integer
            description: Labelid
            format: int64
            example: 17778
    LabelForCreating:
      title: LabelForCreating
      required:
      - categoryId
      description: Create label
      allOf:
      - $ref: '#/components/schemas/AbstractLabel'
      - type: object
        properties:
          categoryId:
            type: integer
            description: Category id
            format: int64
            example: 17777
    InstanceData:
      title: InstanceData
      type: object
      properties: {}
      example:
        system_app_name: system
        system_last_modified_time: 2021-03-02 03:15:24
    NameWithNamespace:
      title: NameWithNamespace
      type: object
      properties:
        enName:
          type: string
          description: Alias of an object of a certain type (template)
          example: xxx
        namespace:
          type: string
          description: Namespace of an object of a certain type (template)
          example: system
    NetworkDetail:
      title: NetworkDetail
      required:
      - displayName
      - enName
      type: object
      properties:
        comment:
          type: string
          description: Description
          example: This is a test query for network
        displayName:
          maxLength: 128
          type: string
          description: Name
          example: network1
        enName:
          maxLength: 64
          type: string
          description: Alias
          example: network1
        id:
          type: integer
          description: id
          format: int64
          example: 15555
      description: network detail
    NetworkForCreating:
      title: NetworkForCreating
      required:
      - displayName
      - enName
      type: object
      properties:
        comment:
          type: string
          description: Description
          example: This is a newly-created network
        displayName:
          maxLength: 128
          type: string
          description: Alias
          example: network1
        enName:
          maxLength: 64
          type: string
          description: Name
          example: network1
      description: Create network
    NetworkForUpdating:
      title: NetworkForUpdating
      type: object
      properties:
        comment:
          type: string
          description: Description
          example: This is an edited network
        displayName:
          type: string
          description: Name
          example: Edited network
      description: Edit network
    NetworkNodeForCreating:
      title: NetworkNodeForCreating
      type: object
      properties:
        instanceName:
          type: string
          description: Alias of the current node instance
          example: instance1
        networkOrder:
          type: number
          description: Sorting field (after filling, the nodes can be sorted in ascending/descending order based on this field value)
          format: double
          example: 2.3
        parentId:
          type: integer
          description: "Parent node ID. If it is the root node, leave it blank or fill with -1"
          format: int64
          example: -1
        templateName:
          type: string
          description: Alias of the current node template
          example: t1
        templateNamespace:
          type: string
          description: Namespace of the current node template
          example: system
      description: Create network node
    NetworkNodeForUpdating:
      title: NetworkNodeForUpdating
      type: object
      properties:
        networkOrder:
          type: number
          description: Sorting field (after filling, the nodes can be sorted in ascending/descending order based on this field value)
          format: double
          example: 2.3
        parentId:
          type: integer
          description: Parent node ID
          format: int64
          example: 16666
      description: Update network node
    NetworkNodeTreeDetail:
      title: NetworkNodeTreeDetail
      type: object
      properties:
        children:
          type: array
          description: Child node information
          items:
            $ref: '#/components/schemas/NetworkNodeTreeDetail'
        content:
          type: object
          properties: {}
          description: Node information
        hasChildren:
          type: boolean
          description: Whether the node has children
          example: false
        instanceName:
          type: string
          description: Alias of the current node instance
          example: instance1
        networkOrder:
          type: number
          description: Sorting field (after filling, the nodes can be sorted in ascending/descending order based on this field value)
          format: double
          example: 2.3
        nodeId:
          type: integer
          description: ID of the current node
          format: int64
          example: 12456
        parent:
          $ref: '#/components/schemas/NetworkNodeTreeDetail'
        parentNodeId:
          type: integer
          description: Parent nodeId
          format: int64
          example: 12455
        templateName:
          type: string
          description: Alias of the current node
          example: t1
        templateNamespace:
          type: string
          description: ID of the parent node
          example: system
        labels:
          type: array
          description: Alias of the current node template
          items:
            type: string
            example: label1
      description: network node tree
    PaginatedDisplayBaseAttribute:
      title: PaginatedDisplayBaseAttribute
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/DisplayBaseAttribute'
        pageIndex:
          type: integer
          format: int32
          example: 1
        pageSize:
          type: integer
          format: int32
          example: 20
        total:
          type: integer
          format: int32
          example: 100
      description: Pagination List
    DisplayTemplateWithPagination:
      title: DisplayTemplateWithPagination
      type: object
      properties:
        data:
          maxItems: 500
          type: array
          items:
            $ref: '#/components/schemas/DisplayTemplate'
        pagination:
          $ref: '#/components/schemas/Pagination'
      description: Template information pagination List
    PaginatedDisplayTemplate:
      title: PaginatedDisplayTemplate
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/DisplayTemplate'
        pageIndex:
          type: integer
          format: int32
          example: 1
        pageSize:
          type: integer
          format: int32
          example: 20
        total:
          type: integer
          format: int32
          example: 100
      description: Pagination List
    PaginatedInstanceBaseAttribute:
      title: PaginatedInstanceBaseAttribute
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/InstanceBaseAttribute'
        pageIndex:
          type: integer
          format: int32
          example: 1
        pageSize:
          type: integer
          format: int32
          example: 20
        total:
          type: integer
          format: int32
          example: 100
      description: Pagination List
    PaginatedInstanceBriefAttribute:
      title: PaginatedInstanceBriefAttribute
      type: object
      properties:
        list:
          type: array
          items:
            $ref: '#/components/schemas/InstanceAttributeWithBindRelation'
        pagination:
          $ref: '#/components/schemas/Pagination'
      description: Pagination List
    PaginatedDisplayRelationDto:
      title: PaginatedDisplayRelationDto
      type: object
      properties:
        list:
          type: array
          items:
            $ref: '#/components/schemas/DisplayRelationDto'
        pagination:
          $ref: '#/components/schemas/Pagination'
      description: Pagination List
    PaginatedDisplayAlarmDtoWithOwner:
      title: PaginatedDisplayAlarmDtoWithOwner
      type: object
      properties:
        list:
          type: array
          items:
            $ref: '#/components/schemas/DisplayAlarmDtoWithOwner'
        pagination:
          $ref: '#/components/schemas/Pagination'
      description: Pagination List
    PaginatedDisplayEventDto:
      title: PaginatedDisplayEventDto
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/DisplayEventDto'
        pageIndex:
          type: integer
          format: int32
          example: 1
        pageSize:
          type: integer
          format: int32
          example: 20
        total:
          type: integer
          format: int32
          example: 20
      description: Pagination List
    PaginatedLabelCategoryDetail:
      title: PaginatedLabelCategoryDetail
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/LabelCategoryDetail'
        pageIndex:
          type: integer
          format: int32
          example: 1
        pageSize:
          type: integer
          format: int32
          example: 20
        total:
          type: integer
          format: int32
          example: 100
      description: Pagination List
    PaginatedLabelDetail:
      title: PaginatedLabelDetail
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/LabelDetail'
        pageIndex:
          type: integer
          format: int32
          example: 1
        pageSize:
          type: integer
          format: int32
          example: 20
        total:
          type: integer
          format: int32
          example: 100
      description: Pagination List
    PaginatedInstanceData:
      title: PaginatedInstanceData
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/InstanceData'
        pageIndex:
          type: integer
          format: int32
          example: 1
        pageSize:
          type: integer
          format: int32
          example: 20
        total:
          type: integer
          format: int32
          example: 100
      description: Pagination List
    PaginatedNetworkDetail:
      title: PaginatedNetworkDetail
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/NetworkDetail'
        pageIndex:
          type: integer
          format: int32
          example: 1
        pageSize:
          type: integer
          format: int32
          example: 20
        total:
          type: integer
          format: int32
          example: 100
      description: Pagination List
    PaginatedTemplateIdTypeName:
      title: PaginatedTemplateIdTypeName
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/TemplateIdTypeName'
        pageIndex:
          type: integer
          format: int32
          example: 1
        pageSize:
          type: integer
          format: int32
          example: 20
        total:
          type: integer
          format: int32
          example: 100
      description: Pagination List
    AppIdWithPagination:
      title: AppIdWithPagination
      type: object
      properties:
        data:
          maxItems: 500
          type: array
          items:
            maxLength: 128
            type: string
            description: appName
            example: App_bac090d688004de9bf927b9ff66bfca7
        pagination:
          $ref: '#/components/schemas/Pagination'
    PaginatedAppId:
      title: PaginatedAppId
      type: object
      properties:
        data:
          maxItems: 500
          type: array
          items:
            maxLength: 128
            type: string
            description: appName
            example: app1
        pageIndex:
          type: integer
          format: int32
          example: 1
        pageSize:
          type: integer
          format: int32
          example: 20
        total:
          type: integer
          format: int32
          example: 100
      description: appPagination List
    Query:
      title: Query
      type: object
      properties:
        distinct:
          type: boolean
          description: Whether to perform data deduplication
          example: true
        orderBys:
          type: array
          items:
            $ref: '#/components/schemas/OrderBy'
        selectAttributeNames:
          type: array
          items:
            type: string
            description: Alias of the attribute to be queried
            example: p1
        where:
          $ref: '#/components/schemas/ConditionGroup'
    OrderBy:
      title: OrderBy
      type: object
      properties:
        by:
          type: array
          description: Alias of the sorting attribute
          items:
            type: string
            example: time
        order:
          type: string
          description: |
            Sorting rule
              * ASC Ascending order
              * DESC Descending order
          example: ASC
          enum:
          - ASC
          - DESC
    ConditionGroup:
      title: ConditionGroup
      type: object
      properties:
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/BinaryOperateCondition'
        logicOperator:
          type: string
          description: |
            Query condition connection method
              * AND and
              * OR or
              * NOT not
          example: AND
          enum:
          - AND
          - OR
          - NOT
    BinaryOperateCondition:
      title: BinaryOperateCondition
      type: object
      properties:
        attributeName:
          type: string
          example: p1
        operator:
          type: string
          description: SQL operator; <br/>The 'LIKE' operator is not supported for boolean type attributes.
          example: =
        value:
          type: object
          properties: {}
          description: "The value varies depending on the attribute type. For example, for integer type, it can be 11; <br/>For dateTime type properties in the database, the value is in UTC timezone and needs to be converted to the desired timezone."
          example: {}
    RealTimeDataQuery:
      title: RealTimeDataQuery
      type: object
      properties:
        inputs:
          type: array
          example:
          - system.t1.instance.system.p1
          items:
            type: string
            description: TemplateNamespace.TemplateAlias.InstanceAlias.AttributeNamespace.AttributeAlias
      description: VQT query entity
    ResultInstanceAttribute:
      title: ResultInstanceAttribute
      type: object
      properties:
        code:
          type: integer
          description: |
            Successful request code
              * 200 Successful request with data returned
          format: int32
          example: 200
          enum:
          - 200
        data:
          type: array
          items:
            $ref: '#/components/schemas/InstanceAttribute'
        detail:
          type: string
          description: Error details
        message:
          type: string
          description: Error information
          example: ok
      description: Interface returns to details of the instance's attributes
    ResultDisplayInstance:
      title: ResultDisplayInstance
      type: object
      properties:
        code:
          type: integer
          description: |
            Successful request code
              * 200 Successful request with data returned
          format: int32
          example: 200
          enum:
          - 200
        data:
          $ref: '#/components/schemas/DisplayInstance'
        detail:
          type: string
          description: Error details
        message:
          type: string
          description: Error information
          example: ok
      description: Interface returns to entity
    ResultHistoryDetail:
      title: ResultHistoryDetail
      type: object
      properties:
        code:
          type: integer
          description: |
            Successful request code
              * 200 Successful request with data returned
          format: int32
          example: 200
          enum:
          - 200
        data:
          $ref: '#/components/schemas/HistoryDetail'
        detail:
          type: string
          description: Error details
        message:
          type: string
          description: Error information
          example: ok
      description: Interface returns to entity
    ResultInstanceTable:
      title: ResultInstanceTable
      type: object
      properties:
        code:
          type: integer
          description: |
            Successful request code
              * 200 Successful request with data returned
          format: int32
          example: 200
          enum:
          - 200
        data:
          $ref: '#/components/schemas/InstanceTable'
        detail:
          type: string
          description: Error details
        message:
          type: string
          description: Error information
          example: ok
      description: Interface returns to entity
    ResultLabelDetail:
      title: ResultLabelDetail
      type: object
      properties:
        code:
          type: integer
          description: |
            Successful request code
              * 200 Successful request with data returned
          format: int32
          example: 200
          enum:
          - 200
        data:
          $ref: '#/components/schemas/LabelDetail'
        detail:
          type: string
          description: Error details
        message:
          type: string
          description: Error information
          example: ok
      description: Interface returns to entity
    ResultListCurrentAlert:
      title: ResultListCurrentAlert
      type: object
      properties:
        code:
          type: integer
          description: |
            Successful request code
              * 200 Successful request with data returned
          format: int32
          example: 200
          enum:
          - 200
        data:
          type: array
          description: Data
          items:
            $ref: '#/components/schemas/CurrentAlert'
        detail:
          type: string
          description: Error details
        message:
          type: string
          description: Error information
          example: ok
      description: Interface returns to entity
    ResultListDisplayTemplate:
      title: ResultListDisplayTemplate
      type: object
      properties:
        code:
          type: integer
          description: |
            Successful request code
              * 200 Successful request with data returned
          format: int32
          example: 200
          enum:
          - 200
        data:
          type: array
          description: Data
          items:
            $ref: '#/components/schemas/DisplayTemplate'
        detail:
          type: string
          description: Error details
        message:
          type: string
          description: Error information
          example: ok
      description: Interface returns to entity
    ResultListTemplateTreeNodeDetail:
      title: ResultListTemplateTreeNodeDetail
      type: object
      properties:
        code:
          type: integer
          description: |
            Successful request code
              * 200 Successful request with data returned
          format: int32
          example: 200
          enum:
          - 200
        data:
          type: array
          description: Data
          items:
            $ref: '#/components/schemas/TemplateTreeNodeDetail'
        detail:
          type: string
          description: Error details
        message:
          type: string
          description: Error information
          example: ok
      description: Interface returns to entity
    ResultListUnit:
      title: ResultListUnit
      type: object
      properties:
        code:
          type: integer
          description: |
            Successful request code
              * 200 Successful request with data returned
          format: int32
          example: 200
          enum:
          - 200
        data:
          type: array
          description: Data
          items:
            $ref: '#/components/schemas/Unit'
        detail:
          type: string
          description: Error details
        message:
          type: string
          description: Error information
          example: ok
      description: Interface returns to entity
    ResultMapVQT:
      title: ResultMapVQT
      type: object
      properties:
        code:
          type: integer
          description: |
            Successful request code
              * 200 Successful request with data returned
          format: int32
          example: 200
          enum:
          - 200
        data:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/VQT'
          description: Data
        detail:
          type: string
          description: Error details
        message:
          type: string
          description: Error information
          example: ok
      description: Interface returns to entity
    ResultNetworkNodeTreeDetail:
      title: ResultNetworkNodeTreeDetail
      type: object
      properties:
        code:
          type: integer
          description: |
            Successful request code
              * 200 Successful request with data returned
          format: int32
          example: 200
          enum:
          - 200
        data:
          $ref: '#/components/schemas/NetworkNodeTreeDetail'
        detail:
          type: string
          description: Error details
        message:
          type: string
          description: Error information
          example: ok
      description: Interface returns to entity
    ResultPaginatedDisplayBaseAttribute:
      title: ResultPaginatedDisplayBaseAttribute
      type: object
      properties:
        code:
          type: integer
          description: |
            Successful request code
              * 200 Successful request with data returned
          format: int32
          example: 200
          enum:
          - 200
        data:
          $ref: '#/components/schemas/PaginatedDisplayBaseAttribute'
        detail:
          type: string
          description: Error details
        message:
          type: string
          description: Error information
          example: ok
      description: Interface returns to entity
    ResultPaginatedDisplayTemplate:
      title: ResultPaginatedDisplayTemplate
      type: object
      properties:
        code:
          type: integer
          description: |
            Successful request code
              * 200 Successful request with data returned
          format: int32
          example: 200
          enum:
          - 200
        data:
          $ref: '#/components/schemas/PaginatedDisplayTemplate'
        detail:
          type: string
          description: Error details
        message:
          type: string
          description: Error information
          example: ok
      description: Interface returns to entity
    ResultPaginatedInstanceBaseAttribute:
      title: ResultPaginatedInstanceBaseAttribute
      type: object
      properties:
        code:
          type: integer
          description: |
            Successful request code
              * 200 Successful request with data returned
          format: int32
          example: 200
          enum:
          - 200
        data:
          $ref: '#/components/schemas/PaginatedInstanceBaseAttribute'
        detail:
          type: string
          description: Error details
        message:
          type: string
          description: Error information
          example: ok
      description: Interface returns to entity
    ResultPaginatedLabelCategoryDetail:
      title: ResultPaginatedLabelCategoryDetail
      type: object
      properties:
        code:
          type: integer
          description: |
            Successful request code
              * 200 Successful request with data returned
          format: int32
          example: 200
          enum:
          - 200
        data:
          $ref: '#/components/schemas/PaginatedLabelCategoryDetail'
        detail:
          type: string
          description: Error details
        message:
          type: string
          description: Error information
          example: ok
      description: Interface returns to entity
    ResultPaginatedLabelDetail:
      title: ResultPaginatedLabelDetail
      type: object
      properties:
        code:
          type: integer
          description: |
            Successful request code
              * 200 Successful request with data returned
          format: int32
          example: 200
          enum:
          - 200
        data:
          $ref: '#/components/schemas/PaginatedLabelDetail'
        detail:
          type: string
          description: Error details
        message:
          type: string
          description: Error information
          example: ok
      description: Interface returns to entity
    ResultPaginatedInstance:
      title: ResultPaginatedInstance
      type: object
      properties:
        code:
          type: integer
          description: |
            Successful request code
              * 200 Successful request with data returned
          format: int32
          example: 200
          enum:
          - 200
        data:
          $ref: '#/components/schemas/PaginatedInstanceData'
        detail:
          type: string
          description: Error details
        message:
          type: string
          description: Error information
          example: ok
      description: Interface returns to entity
    ResultPaginatedNetworkDetail:
      title: ResultPaginatedNetworkDetail
      type: object
      properties:
        code:
          type: integer
          description: |
            Successful request code
              * 200 Successful request with data returned
          format: int32
          example: 200
          enum:
          - 200
        data:
          $ref: '#/components/schemas/PaginatedNetworkDetail'
        detail:
          type: string
          description: Error details
        message:
          type: string
          description: Error information
          example: ok
      description: Interface returns to entity
    ResultPaginatedTemplateIdTypeName:
      title: ResultPaginatedTemplateIdTypeName
      type: object
      properties:
        code:
          type: integer
          description: |
            Successful request code
              * 200 Successful request with data returned
          format: int32
          example: 200
          enum:
          - 200
        data:
          $ref: '#/components/schemas/PaginatedTemplateIdTypeName'
        detail:
          type: string
          description: Error details
        message:
          type: string
          description: Error information
          example: ok
      description: Interface returns to entity
    ResultPaginatedAppId:
      title: ResultPaginatedAppId
      type: object
      properties:
        code:
          type: integer
          description: |
            Successful request code
              * 200 Successful request with data returned
          format: int32
          example: 200
          enum:
          - 200
        data:
          $ref: '#/components/schemas/PaginatedAppId'
        detail:
          type: string
          description: Error details
        message:
          type: string
          description: Error information
          example: ok
      description: Interface returns to entity
    ResultTemplateTree:
      title: ResultTemplateTree
      type: object
      properties:
        code:
          type: integer
          description: |
            Successful request code
              * 200 Successful request with data returned
          format: int32
          example: 200
          enum:
          - 200
        data:
          $ref: '#/components/schemas/TemplateTree'
        detail:
          type: string
          description: Error details
        message:
          type: string
          description: Error information
          example: ok
      description: Interface returns to entity
    ResultLong:
      title: ResultLong
      type: object
      properties:
        code:
          type: integer
          description: |
            Successful request code
              * 200 Successful request with data returned
          format: int32
          example: 200
          enum:
          - 200
        data:
          type: integer
          description: Returns to the data id of the successfully-created type (tag/tag category/network/network node/attribute/template)
          format: int64
          example: 19999
        detail:
          type: string
          description: Error details
        message:
          type: string
          description: Error information
          example: ok
      description: Interface returns to entity
    ResultServiceExec:
      title: ResultServiceExec
      type: object
      properties:
        code:
          type: integer
          description: |
            Successful request code
              * 200 Successful request with data returned
          format: int32
          example: 200
          enum:
          - 200
        data:
          type: object
          properties: {}
          description: Information returned when the service execution is successful (e.g., getPropertyValue)
          example:
            result: 44
        detail:
          type: string
          description: Error details
        message:
          type: string
          description: Error information
          example: ok
      description: Interface returns to entity
    ResultInstanceId:
      title: ResultInstanceId
      type: object
      properties:
        code:
          type: integer
          description: |
            Successful request code
              * 200 Successful request with data returned
          format: int32
          example: 200
          enum:
          - 200
        data:
          type: string
          description: The id of the successfully-created instance
          example: "13456"
        detail:
          type: string
          description: Error details
        message:
          type: string
          description: Error information
          example: ok
      description: Interface returns to entity
    SerializableVqt:
      title: SerializableVqt
      type: object
      description: "The value returned for querying the real-time value of the property (depends on the property type, taking String type as an example, such as 'qwerty')"
      example: {}
    TemplateIdTypeName:
      title: TemplateIdTypeName
      type: object
      properties:
        appName:
          maxLength: 128
          type: string
          description: This field name is incorrect and has been deprecated. Please use the 'appId' field. The usage is the same as 'appId'.
          example: system
          deprecated: true
        appId:
          maxLength: 128
          type: string
          description: App unique identifier, ID of the app to which the event belongs
          example: system
        displayName:
          type: string
          description: Template name
          example: t1
        enName:
          type: string
          description: Template alias
          example: t1
        id:
          type: integer
          description: Template id
          format: int64
          example: 12323
        labelIds:
          type: array
          description: Bound label id
          items:
            type: integer
            format: int64
            example: 12222
        namespace:
          maxLength: 64
          type: string
          description: Namespace
          example: system
        type:
          type: string
          description: |
            Template type
              * ROOT Root template type
              * INTERNAL Internal template type
              * EXTERNAL External template type
              * RELATION Relation template type
              * ENTITY Entity template type
              * FORM   Form template type
              * REMOTE Remote template type
              * COLLECTOR  Collector template type
              * MAPPING  Mapping template type
          example: ENTITY
          enum:
          - ROOT
          - INTERNAL
          - EXTERNAL
          - RELATION
          - ENTITY
          - FORM
          - REMOTE
          - COLLECTOR
          - MAPPING
      description: Template basic information
    TemplateNameWithNamespace:
      title: TemplateNameWithNamespace
      type: object
      properties:
        inputs:
          type: array
          description: Template namespace and alias
          items:
            $ref: '#/components/schemas/NameWithNamespace'
      description: Template NameWithNamespace
    TemplateTree:
      title: TemplateTree
      type: object
      properties:
        children:
          type: array
          description: Subtemplate information
          items:
            $ref: '#/components/schemas/TemplateTree'
        deletable:
          type: boolean
          example: true
        displayName:
          type: string
          description: TemplateName
          example: t1
        editable:
          type: boolean
          example: true
        enName:
          type: string
          description: Template alias
          example: t1
        id:
          type: integer
          format: int64
          example: 13333
        namespace:
          type: string
          description: Namespace
          example: system
        type:
          type: string
          description: |
            Template type
              * ROOT Root template type
              * INTERNAL Internal template type
              * EXTERNAL External template type
              * RELATION Relation template type
              * ENTITY Entity template type
              * FORM   Form template type
              * REMOTE Remote template type
              * COLLECTOR  Collector template type
              * MAPPING  Mapping template type
          example: ENTITY
          enum:
          - ROOT
          - INTERNAL
          - EXTERNAL
          - RELATION
          - ENTITY
          - FORM
          - REMOTE
          - COLLECTOR
          - MAPPING
      description: Template tree
    DisplayAlarmDtoWithOwner:
      title: DisplayAlarmDtoWithOwner
      description: Display alarm information
      allOf:
      - $ref: '#/components/schemas/AbstractAlarm'
      - type: object
        properties:
          id:
            type: integer
            description: Alarm id
            format: int64
            example: 11145
          enName:
            type: string
            description: Configuration id
            example: uuid08fb884b9a4743d08464e95c64074d09
          templateEnName:
            type: string
            description: Template alias
            example: testTemplate
          templateDisplayName:
            type: string
            description: Template name
            example: Test template
          instanceEnName:
            type: string
            description: Instance alias
            example: testEntity
          instanceDisplayName:
            type: string
            description: Instance name
            example: Test instance
          attributeEnName:
            type: string
            description: Attribute alias
            example: p1
          attributeDisplayName:
            type: string
            description: Attribute name
            example: p1
          attributeComment:
            type: string
            description: Attribute description
            example: Test attribute p1
          instanceLabels:
            type: array
            description: Collection of object labels
            items:
              $ref: '#/components/schemas/LongIdDisplayNameWithEnName'
          attributeLabels:
            type: array
            description: Collection of attribute labels
            items:
              $ref: '#/components/schemas/LongIdDisplayNameWithEnName'
    LongIdDisplayNameWithEnName:
      title: LongIdDisplayNameWithEnName
      allOf:
      - $ref: '#/components/schemas/IdDisplayName'
      - type: object
        properties:
          enName:
            type: string
            description: Alias of the metadata (tag/template)
            example: metadata1
    StringIdDisplayNameWithEnName:
      title: StringIdDisplayNameWithEnName
      allOf:
      - $ref: '#/components/schemas/StringIdDisplayName'
      - type: object
        properties:
          enName:
            type: string
            description: Instance alias
            example: metadata1
    LongIdDisplayNameWithFullName:
      title: LongIdDisplayNameWithFullName
      allOf:
      - $ref: '#/components/schemas/LongIdDisplayNameWithEnName'
      - type: object
        properties:
          namespace:
            type: string
            description: Metadata namespace
            example: system
    DisplayAlarmDto:
      title: DisplayAlarmDto
      allOf:
      - $ref: '#/components/schemas/AbstractAlarm'
      - type: object
        properties:
          enName:
            type: string
            description: Alias
            example: alarm1
          id:
            type: integer
            description: id
            format: int64
            example: 11145
          instanceId:
            type: string
            description: Instance ID
            example: "11234"
    TemplateTreeNodeDetail:
      title: TemplateTreeNodeDetail
      required:
      - displayName
      - enName
      description: Template tree node information
      allOf:
      - $ref: '#/components/schemas/TemplateOperation'
      - type: object
        properties:
          associationType:
            type: string
            description: |
              Association type
                * BINARY Binary association
                * MULTI Multi-association
            example: BINARY
            enum:
            - BINARY
            - MULTI
          comment:
            type: string
            description: Description
            example: This is a test template
          displayName:
            maxLength: 128
            type: string
            description: Name
            example: t1
          enName:
            maxLength: 64
            type: string
            description: Alias
            example: t1
          id:
            type: integer
            description: id
            format: int64
            example: 16666
          leaf:
            type: boolean
            description: Whether to have subtemplates
            example: true
          namespace:
            type: string
            description: Namespace
            example: system
          type:
            type: string
            description: |
              Template type
                * ROOT Root template type
                * INTERNAL Internal template type
                * EXTERNAL External template type
                * RELATION Relation template type
                * ENTITY Entity template type
                * FORM   Form template type
                * REMOTE Remote template type
                * COLLECTOR  Collector template type
                * MAPPING  Mapping template type
            example: ENTITY
            enum:
            - ROOT
            - INTERNAL
            - EXTERNAL
            - RELATION
            - ENTITY
            - FORM
            - REMOTE
            - COLLECTOR
            - MAPPING
    RealTimeValue:
      title: RealTimeValue
      required:
      - attributeFullPath
      - value
      type: object
      properties:
        attributeFullPath:
          type: string
          description: Full path of the attribute, which can be Instance alias.Attribute namespace.Attribute alias or Template namespace.Template alias.Instance alias.Attribute namespace.Attribute alias.
          example: system.t1.i1.system.p1
        value:
          type: string
          description: Value to be set for the attribute (varies depending on the attribute type, using integer type as an example)
          example: "666"
        dateTime:
          type: string
          description: Time of setting the attribute, following the RFC 3339 standard, in the format of yyyy-MM-dd'T'HH:mm:ss.SSSZ, such as 2021-04-06T16:00:00.000+08:00 (+08:00 represents the time zone offset). If not provided, the current server time will be used.
          format: date-time
          example: 2021-04-06T16:00:00+08:00
      description: Set real-time value
    TimestampModel:
      title: TimestampModel
      type: object
      properties:
        ge:
          type: string
          description: "Greater than or equal to the specified timestamp, in UTC standard format"
          example: 2021-03-04T05:04:11Z
        gt:
          type: string
          description: "Greater than the specified timestamp (will override ge), in UTC standard format"
          example: 2021-03-04T05:04:11Z
        le:
          type: string
          description:  "Less than the specified timestamp, in UTC standard format"
          example: 2021-03-04T05:14:11Z
        lt:
          type: string
          description: "Less than or equal to the specified timestamp (will override le), in UTC standard format"
          example: 2021-03-04T05:14:11Z
    Unit:
      title: Unit
      type: object
      properties:
        id:
          type: integer
          description: id
          format: int64
          example: 16667
        name:
          type: string
          description: Name
          example: km
      description: Attribute unit details
    UpdateTemplateAttribute:
      title: UpdateTemplateAttribute
      allOf:
      - $ref: '#/components/schemas/UpdateBaseAttribute'
      - type: object
        properties:
          unique:
            type: boolean
            description: "Whether it is unique. This field is deprecated and no longer effective."
            example: false
            deprecated: true
            default: false
          display:
            type: boolean
            description: "Whether it is used as the primary display field. Not applicable to entity template attributes."
            example: false
            default: false
    UpdateBaseAttribute:
      title: UpdateBaseAttribute
      required:
      - appAccessMode
      type: object
      properties:
        appAccessMode:
          type: string
          description: |
           Whether it can be seen in other apps
              * PUBLIC  publicly-owned
              * PRIVATE privately-owned
          example: PUBLIC
          enum:
          - PUBLIC
          - PRIVATE
        comment:
          type: string
          description: Description
          example: edited attribute
        compress:
          type: boolean
          description: Whether to compress (effective when selecting historical values).
          example: false
          default: false
        defaultValue:
          type: string
          description: Default value (using INTEGER type as an example).
          example: "12"
        displayName:
          type: string
          description: Name
          example: udpateAttribute1
        historical:
          type: boolean
          description: Whether to store historical values.
          example: false
          default: false
        labelIds:
          type: array
          description: Label
          items:
            type: integer
            format: int64
            example: 15555
        max:
          type: integer
          description: Upper limit of the range
          format: int64
          example: 100
        maxRisingPeriod:
          type: integer
          description: "Maximum reporting period (effective when compress = true), unit (seconds)."
          format: int32
          example: 900
        min:
          type: integer
          description: Minimum range
          format: int64
          example: 1
        maxValue:
          type: number
          description: Upper limit
          format: float
          example: 100.88
        minValue:
          type: number
          description: Lower limit
          format: float
          example: 0.88
        paramUnit:
          type: string
          description: "Parameter unit (effective when compress = true), optional units (% for percentage, engineering parameters)."
          example: '%'
        paramValue:
          type: string
          description: Parameter value (effective when compress = true).
          example: "0.2"
        persistent:
          type: boolean
          description: Whether to persist.
          example: false
          default: false
        readWriteMode:
          type: string
          description: |
            Read-write mode
              * READ_ONLY Read-only
              * READ_WRITE Read-write
          example: READ_ONLY
          enum:
          - READ_ONLY
          - READ_WRITE
        unit:
          type: string
          description: 单位
          example: kg
        useDisplayField:
          type: boolean
          description: Whether to enable the primary display field (effective when the attribute type is object).
          example: false
          default: false
        valueScale:
          type: integer
          description: Value decimal precision
          format: int32
          example: 2
      description: Modify attribute
    VQT:
      title: VQT
      type: object
      properties:
        name:
          type: string
          description: Attribute full path (Template namespace.Template alias.Instance alias.Attribute namespace.Attribute alias)
          example: system.testExcel.Instance_53.system.p1
        status:
          type: string
          description: Status code of the attribute value
          example: "0"
        timeStamp:
          type: integer
          description: Timestamp of the set value
          format: int64
          example: 1614736757547
        value:
          $ref: '#/components/schemas/SerializableVqt'
    WithIdDisplayNameTemplateId:
      title: WithIdDisplayNameTemplateId
      allOf:
      - $ref: '#/components/schemas/IdDisplayName'
      - type: object
        properties:
          templateId:
            minimum: 1
            type: integer
            description: Template id of the metadata
            format: int64
            example: 15556
    AlertRecordDetail:
      type: object
      properties:
        alertRecordId:
          type: string
          description: Unique identifier of the historical record
          example: 0ccf80f0c7a842d19ef53ee6209d0d9c
        alarmName:
          type: string
          description: Alias of the alarm object
          example: 063a4f8e45254948be8fd7d20f4e4179
        triggerCompareOperator:
          type: string
          description: Alarm trigger rule (LT is Less than, LE is Less than or equal to, GT is  Greater than, GE is Greater than or equal to, EQ is Equal to, NE is Not equal to)
          example: GT
          enum:
          - LT
          - LE
          - GT
          - GE
          - EQ
          - NE
        priority:
          type: integer
          description: Alarm level (an integer between 1 and 10)
          example: 1
        templateName:
          type: string
          description: Template alias
          example: tbl_Validate_Stock_Validate_Stock
        templateNamespace:
          type: string
          description: Template namespace
          example: system
        instanceName:
          type: string
          description: Alias of the object where the alarm metadata belongs
          example: C01100020
        attributeName:
          type: string
          description: Attribute alias of the object where the alarm metadata belongs
          example: inlet_pressure
        instanceDisplayName:
          type: string
          description: obj_data
          example: obj_data
        attributeDisplayName:
          type: string
          description: Name of the attribute where the alarm metadata belongs
          example: pro_obj
        displayName:
          type: string
          description: Alarm name
          example: alarm1
        ackUserName:
          type: string
          description: User who acknowledges the alarm
          example: test
        ackStatus:
          type: integer
          description: Alarm record acknowledgment status (0 is Not acknowledged, 1 is Acknowledged)
          example: 0
          enum:
          - 0
          - 1
        triggerCondition:
          type: string
          description: Conditions for triggering alarms
          example: 26 > 11
        description:
          type: string
          description: Alarm description
          example: Trigger alarm when it exceeds 100
        startDatetime:
          type: string
          description: Alarm trigger time in RFC 3339 format (yyyy-MM-dd'T'HH:mm:ss.SSSZ), e.g., 2021-04-06T16:00:00.000+08:00 (+08:00 represents the time zone offset).
          example: 2021-04-06T16:00:00.000+08:00
        ackDatetime:
          type: string
          description: Alarm acknowledgment time in RFC 3339 format (yyyy-MM-dd'T'HH:mm:ss.SSSZ), e.g., 2021-04-06T17:00:00.000+08:00 (+08:00 represents the time zone offset).
          example: 2021-04-06T17:00:00.000+08:00
        disappearedDatetime:
          type: string
          description: Alarm disappearance time in RFC 3339 format (yyyy-MM-dd'T'HH:mm:ss.SSSZ), e.g., 2021-04-06T18:00:00.000+08:00 (+08:00 represents the time zone offset).
          example: 2021-04-06T18:00:00.000+08:00
        triggerAttributeValue:
          type: string
          description: Current value of the instance attribute when an alarm is triggered
          example: "55"
        disappearedStatus:
          type: integer
          description: Alarm record disappearance status (0 is Not disappeared, 1 is Disappeared)
          example: 0
          enum:
          - 0
          - 1
      description: Alarm history
    AlertRecord:
      type: object
      properties:
        alertRecordId:
          type: string
          description: Unique identifier of the history
          example: 0ccf80f0c7a842d19ef53ee6209d0d9c
        priority:
          type: integer
          description: Alarm level (an integer between 1 and 10)
          example: 1
        displayName:
          type: string
          description: Alarm name
          example: L
        startDatetime:
          type: string
          description: Alarm trigger time in RFC 3339 format (yyyy-MM-dd'T'HH:mm:ss.SSSZ), e.g., 2021-04-06T16:00:00.000+08:00 (+08:00 represents the time zone offset).
          example: 2021-04-06T16:00:00.000+08:00
        ackDatetime:
          type: string
          description: Alarm acknowledgment time in RFC 3339 format (yyyy-MM-dd'T'HH:mm:ss.SSSZ), e.g., 2021-04-06T17:00:00.000+08:00 (+08:00 represents the time zone offset).
          example: 2021-04-06T17:00:00.000+08:00
        disappearedDatetime:
          type: string
          description: Alarm disappearance time in RFC 3339 format (yyyy-MM-dd'T'HH:mm:ss.SSSZ), e.g., 2021-04-06T18:00:00.000+08:00 (+08:00 represents the time zone offset).
          example: 2021-04-06T18:00:00.000+08:00
        instanceName:
          type: string
          description: Alias of the object where the alarm metadata belongs
          example: T11020225
        attributeName:
          type: string
          description: Attribute alias of the object where the alarm metadata belongs
          example: material_spec
        instanceDisplayName:
          type: string
          description: Name of the attribute where the alarm metadata belongs
          example: obj_data2
        attributeDisplayName:
          type: string
          description: pro_obj
          example: specifications and models
      description: Alarm history
    PaginatedSubscription:
      title: PaginatedSubscription
      type: object
      properties:
        list:
          type: array
          items:
            $ref: '#/components/schemas/Subscription'
        pagination:
          $ref: '#/components/schemas/Pagination'
      description: Pagination List
    PaginatedAlerts:
      title: PaginatedAlerts
      type: object
      properties:
        list:
          type: array
          items:
            $ref: '#/components/schemas/CurrentAlert'
        pagination:
          $ref: '#/components/schemas/Pagination'
      description: Pagination List
    Subscription:
      title: Subscription
      description: Subscription details
      allOf:
      - $ref: '#/components/schemas/BaseSubscription'
      - type: object
        properties:
          templateName:
            maxLength: 64
            type: string
            description: Template alias
            example: template
          templateNamespace:
            maxLength: 64
            type: string
            description: Template namespace
            example: system
          instanceName:
            maxLength: 64
            type: string
            description: Instance name
            example: instance
          templateId:
            type: integer
            description: Template id
            format: int32
            example: 1
          instanceId:
            maxLength: 64
            type: string
            description: Instance ID
            example: "2"
          labels:
            type: array
            description: Label id and name
            items:
              $ref: '#/components/schemas/IdDisplayName'
          appId:
            maxLength: 128
            type: string
            description: App unique identifier
            example: system
          timingTrigger:
            $ref: '#/components/schemas/TimingTrigger'
          eventTriggers:
            type: array
            description: event trigger details
            items:
              $ref: '#/components/schemas/EventTrigger'
    EventTrigger:
      title: EventTrigger
      description: subscription trigger
      allOf:
      - $ref: '#/components/schemas/BaseEventTrigger'
      - type: object
        properties:
          templateName:
            maxLength: 64
            type: string
            description: Template name
            example: template
          instanceName:
            maxLength: 64
            type: string
            description: Instance name
            example: instance
          eventName:
            maxLength: 64
            type: string
            description: Event name
            example: ValueChangeEvent
          attributeName:
            maxLength: 64
            type: string
            description: Attribute name
            example: attribute
    TimingTrigger:
      title: TimingTrigger
      required:
      - periodSecond
      - start
      type: object
      properties:
        enable:
          type: boolean
          description: Whether to turn it on
          example: false
          default: true
        end:
          maxLength: 64
          type: string
          description: "End time (must be greater than start time). When inputting the time format as '2022-07-19 10:56:51', the timezone parameter OODM-UTC-OFFSET:480 should be included in the request header; 480 represents UTC+8."
          format: date-time
          example: 2022-07-19T02:56:51Z
        periodSecond:
          type: integer
          description: Time interval in seconds
          format: int64
          example: 60
        start:
          maxLength: 64
          type: string
          description: "Start time (must be smaller than end time). When inputting the time format as '2022-07-19 10:56:50', the timezone parameter OODM-UTC-OFFSET:480 should be included in the request header; 480 represents UTC+8."
          format: date-time
          example: 2022-07-19T02:56:50Z
      description: Scheduled triggering
    DeleteSubscription:
      title: DeleteSubscription
      required:
      - enName
      - instanceName
      - namespace
      - templateName
      - templateNamespace
      type: object
      properties:
        templateNamespace:
          maxLength: 64
          type: string
          description: Template namespace
          example: system
        templateName:
          maxLength: 64
          type: string
          description: Template name
          example: template
        instanceName:
          maxLength: 64
          type: string
          description: Instance name
          example: instance
        namespace:
          maxLength: 64
          type: string
          description: Subscription namespace
          example: system
        enName:
          maxLength: 64
          type: string
          description: subscription
          example: s1
      description: Input information for deleting subscription
    OperateSubscription:
      title: OperateSubscription
      description: Subscription details
      allOf:
      - $ref: '#/components/schemas/BaseSubscription'
      - required:
        - appId
        - instanceName
        - templateName
        - templateNamespace
        type: object
        properties:
          templateNamespace:
            maxLength: 64
            type: string
            description: Template namespace
            example: system
          templateName:
            maxLength: 64
            type: string
            description: Template name
            example: template
          instanceName:
            maxLength: 64
            type: string
            description: Instance name
            example: instance
          labelIds:
            maxItems: 100
            type: array
            description: Label
            items:
              type: integer
              format: int64
              example: 11133
          appId:
            maxLength: 128
            type: string
            description: App unique identifier (When the subscription belongs to a specific app, provide the appId. For example, App_5b3791a084a574e619cb15690a985b94)
            example: App_5b3791a084a574e619cb15690a985b94
          timingTrigger:
            $ref: '#/components/schemas/TimingTrigger'
          eventTriggers:
            maxItems: 20
            type: array
            description: "Event trigger information. Required when triggerType is EVENT; cannot be used together with timingTrigger."
            items:
              $ref: '#/components/schemas/OperateEventTrigger'
    BaseSubscription:
      title: BaseSubscription
      required:
      - appAccessMode
      - displayName
      - enName
      - triggerType
      type: object
      properties:
        enName:
          maxLength: 64
          type: string
          description: Subscription alias
          example: s1
        displayName:
          maxLength: 64
          type: string
          description: Subscription name
          example: s1
        comment:
          maxLength: 1024
          type: string
          description: Description
          example: This is a subscription
        appShowName:
          maxLength: 64
          type: string
          description: app display name
          example: aaaa
        appAccessMode:
          maxLength: 64
          type: string
          description: |
            Data type
              * PUBLIC accessible to all apps
              * PRIVATE  accessible only to the creating app
          example: PUBLIC
          enum:
          - PUBLIC
          - PRIVATE
        namespace:
          maxLength: 64
          type: string
          description: Subscription namespace
          example: system
          default: system
        script:
          type: string
          description: There is no limit on the length of the script, but it is recommended to keep the size of a single subscription script below 800mb.
          example: log.debug(1111);
        triggerType:
          maxLength: 64
          type: string
          description: |
            Trigger type
              * EVENT event
              * TIMING timing
          example: EVENT
          enum:
          - EVENT
          - TIMING
      description: Subscription information
    OperateEventTrigger:
      title: OperateEventTrigger
      required:
      - eventName
      - eventNamespace
      - instanceName
      - templateName
      - templateNamespace
      type: object
      properties:
        templateName:
          maxLength: 64
          type: string
          description: Source template name
          example: template
        templateNamespace:
          maxLength: 64
          type: string
          description: Source template namespace
          example: system
        instanceName:
          maxLength: 64
          type: string
          description: Source instance name
          example: instance
        eventName:
          maxLength: 64
          type: string
          description: Event name (divided into built-in system events and user-defined events). Built-in events are ValueChangeEvent (value change), AlertStartEvent (alarm triggered), AlertAckEvent (alarm acknowledged), AlertDisappearEvent (alarm disappeared)
          example: ValueChangeEvent
        eventNamespace:
          maxLength: 64
          type: string
          description: Event namespace system namespace
          example: system
        attributeNamespace:
          maxLength: 64
          type: string
          description: Attribute namespace (required when attributeName is provided)
          example: system
        attributeName:
          maxLength: 64
          type: string
          description: Source attribute name (not required for custom events; required for built-in system events)
          example: attribute
      description: Create subscription event trigger
    Pagination:
      title: Pagination
      type: object
      properties:
        total:
          type: integer
          description: Total number of records queried
          format: int32
          example: 10
        pageSize:
          minimum: 1
          type: integer
          description: Page size for pagination
          format: int32
          example: 20
        current:
          maximum: 500
          minimum: 1
          type: integer
          description: Page number
          format: int32
          example: 1
      description: Pagination information
    ResultSuccessSimple:
      title: ResultError
      type: object
      properties:
        code:
          type: integer
          description: |
            Business success code
              * 200 Request successful
          format: int32
          example: 200
          enum:
          - 200
        data:
          type: object
        detail:
          type: string
          description: "Error details, null for successful responses"
          example: string
        message:
          type: string
          description: Error information
          example: ok
        context:
          type: object
          description: Error context
        targetService:
          type: string
          description: Service module where the error occurred
      description: Simple entity for successful API response
      example:
        code: 200
        message: ok
        detail: string
    ResultError:
      title: ResultError
      type: object
      properties:
        code:
          type: integer
          description: |
            Business error codes
              * 10001001 Unknown server error
              * 10001002 Invalid parameter value
              * 10001003 Failed to generate ID
              * 10001004 Failed to operate on the database
              * 10001005 Instance ID cannot be empty
              * 10001006 Failed to parse date, format mismatch
              * 10001007 Remote call error
              * 10001008 Object copying failed
              * 10001009 Error not found, e.g., template/attribute/event/service/subscription/alarm not found
              * 10001010 Unsupported operation
              * 10001011 Unauthorized
              * 10001012 Field duplication
              * 10001013 Not compliant with specifications
              * 10001014 Metadata has dependencies
              * 10001015 Metadata already exists
              * 90200000 Metadata does not belong to a template
              * 90200001 Metadata does not belong to an instance
              * 90200002 Metadata does not belong to a feature set
              * 90200003 Metadata does not belong to an app
              * 90200004 Metadata's feature set source is a feature set
              * 90200005 Failed to parse instance text
              * 90200006 Database type not supported
              * 90200007 Field value already exists
              * 90200008 Attribute value conversion error
              * 90200009 Metadata's alias and namespace exceed the maximum character length
              * 90200010 Unable to delete due to existing instances
              * 90200011 Unable to delete due to existing nodes in the network
              * 90200012 Invalid parent node ID
              * 90200013 Uncertain name
              * 90300000 Service not found
              * 90300001 Service execution failed
              * 90300002 Service field cannot be empty
              * 90300003 Incorrect input parameter format
              * 90300004 Data processing error
              * 90300005 Error modifying alarm acknowledgement status
              * 90300006 Error exporting historical alarms
              * 90300007 Data satisfying specified conditions does not exist
              * 90300008 Script execution failed
              * 90500000 Incorrect attribute format, should be template namespace.Template alias.attribute namespace.Attribute alias
              * 90500001 Incorrect attribute format, should be template namespace.Template alias.instance alias.attribute namespace.Attribute alias
              * 90500002 Incorrect attribute format, should be feature set namespace.Feature set alias.attribute namespace.Attribute alias
              * 90500003 Template not found
              * 90500004 Feature set not found
              * 90500005 Instance not found
              * 90500006 Attribute not found
              * 90800000 Data source not found
              * 90800001 Failed to execute SQL
              * 90800002 Error parsing the attribute of instance range in JSON format
              * 90800003 Error converting attribute value of instance range to JSON format
              * 90800004 Error modifying alarm acknowledgement status
              * 90800005 Error exporting historical alarms
              * 90800006 Error parsing string type as date type
              * 90900002 Alarm information list cannot be empty
              * 90900003 Exceeded the maximum limit of 100 alarms
              * 90900004 Incorrect format for alarm information
              * 90900005 Incorrect time format
              * 90900006 Invalid historical alarm ID
          format: int32
          example: 10001001
          enum:
          - 10001001
          - 10001002
          - 10001003
          - 10001004
          - 10001005
          - 10001006
          - 10001007
          - 10001008
          - 10001009
          - 10001010
          - 10001011
          - 10001012
          - 10001013
          - 10001014
          - 10001015
          - 90200000
          - 90200001
          - 90200002
          - 90200003
          - 90200004
          - 90200005
          - 90200006
          - 90200007
          - 90200008
          - 90200009
          - 90200010
          - 90200011
          - 90200012
          - 90200013
          - 90300000
          - 90300001
          - 90300002
          - 90300003
          - 90300004
          - 90300005
          - 90300006
          - 90300007
          - 90300008
          - 90500000
          - 90500001
          - 90500002
          - 90500003
          - 90500004
          - 90500005
          - 90500006
          - 90800000
          - 90800001
          - 90800002
          - 90800003
          - 90800004
          - 90800005
          - 90800006
          - 90900002
          - 90900003
          - 90900004
          - 90900005
          - 90900006
        data:
          type: object
        detail:
          type: string
          description: Error details
          example: string
        message:
          type: string
          description: Error information
          example: string
        context:
          type: object
          description: Error context
        targetService:
          type: string
          description: Service modules that generate errors
      description: Interface returns to entity
    inline_response_200:
      oneOf:
      - $ref: '#/components/schemas/ResultListCurrentAlert'
      - $ref: '#/components/schemas/PaginatedAlerts'
    inline_response_400:
      type: object
      properties:
        code:
          type: integer
          description: |
            Error code
            * 10001001 Undefined exception
            * 10001009 Data does not exist
            * 10001010 Unsupported operation
            * 10001013 Parameter exception
          example: 10001009
          enum:
          - 10001001
          - 10001009
          - 10001010
          - 10001013
        message:
          type: string
          description: Error message
          example: ATTRIBUTE:system.xx not found.
        detail:
          type: string
          description: "Error details (for developers, not relevant to users)"
        data:
          type: object
          description: "Returned data, usually null when an error occurs"
    inline_response_400_1:
      type: object
      properties:
        code:
          type: integer
          description: |
            Error code
            * 10001013 Invalid input parameter
          format: int32
          example: 10001009
          enum:
          - 10001013
        message:
          type: string
          description: Error message
          example: "Number of items per page: 501 does not comply with the rules: must be less than or equal to 500."
        data:
          type: object
        detail:
          type: string
          description: Error details
          example: string
    inline_response_400_2:
      type: object
      properties:
        code:
          type: integer
          description: |
            Error code
            * 10001013 Invalid input parameters
            * 10001009 Function set/template/instance not found
          format: int32
          example: 10001009
          enum:
          - 10001013
          - 10001009
        message:
          type: string
          description: Error message
          example: "Number of data entries per page is 501, which does not meet the requirements, and it must be less than or equal to 500.'"
        data:
          type: object
        detail:
          type: string
          description: Error details
          example: string
    inline_response_400_3:
      type: object
      properties:
        code:
          type: integer
          description: |
            Error code
            * 10001009 Template/instance/attribute data does not exist.
            * 10001010 Unsupported operation.
            * 10001012 Data duplication.
            * 10001013 Invalid input parameters.
            * 10001024 Expression syntax error.
            * 10001025 Attribute self-binding.
            * 90500001 Incorrect format of instance attribute in the expression.
          format: int32
          example: 10001009
          enum:
          - 10001009
          - 10001010
          - 10001012
          - 10001013
          - 10001024
          - 10001025
          - 90500001
        message:
          type: string
          description: Error message
          example: Template with full name (namespace.alias) system.t1 not found
        data:
          type: object
        detail:
          type: string
          description: Error detail
          example: string
    inline_response_400_4:
      type: object
      properties:
        code:
          type: integer
          description: |
            Error codes
            * 10001009 Template/instance/attribute data does not exist.
            * 10001010 Unsupported operation.
            * 10001012 Data duplication.
            * 10001013 Invalid input parameters.
            * 10001024 Expression syntax error.
            * 10001025 Attribute self-binding.
            * 90500001  Incorrect format of instance attribute in the expression.
          format: int32
          example: 10001009
          enum:
          - 10001009
          - 10001010
          - 10001012
          - 10001013
          - 10001024
          - 10001025
          - 90500001
        message:
          type: string
          description: Prompt message
          example: Template with full name (namespace.alias) system.t1 not found
        data:
          type: object
        detail:
          type: string
          description: Error detail
          example: string
    inline_response_400_5:
      type: object
      properties:
        code:
          type: integer
          description: |
            Error code
            * 90900006 Invalid alarm history ID
          format: int32
          enum:
          - 90900006
        message:
          type: string
          description: Error message
          example: Invalid alarm history ID
        data:
          type: object
        detail:
          type: string
          description: Error detail
          example: string
    inline_response_200_1:
      type: object
      properties:
        list:
          type: array
          items:
            $ref: '#/components/schemas/AlertRecord'
        pagination:
          $ref: '#/components/schemas/Pagination'
    inline_response_400_6:
      type: object
      properties:
        code:
          type: integer
          description: |
            Error code
            * 90900005 Error time format
          format: int32
          enum:
          - 90900005
        message:
          type: string
          description: Error information
          example: Error time format
        data:
          type: object
        detail:
          type: string
          description: Error details
          example: string
    inline_response_200_2:
      type: object
      properties:
        alarmName:
          type: string
          description: Alarm alias
        userNames:
          type: array
          items:
            type: string
            description: |
              The maximum number of alarms to be processed is 100. An error is thrown if it exceeds 100.
              If the full path of an alarm does not exist or no users with push permissions are found, an empty array is returned.
      example:
        system.Template_823.msa_test_05.p1_a1:
        - admin
        - test
        system.Template_829.msa_test_09.p1_a2: []
    inline_response_400_7:
      type: object
      properties:
        code:
          type: integer
          description: |
            Error code
            * 90900002 The list of alarm full paths cannot be empty 
            * 90900003 Exceeded the maximum limit of 100 alarms
            * 90900004 Incorrect format of the alarm full path (template namespace, template alias, instance alias, alarm alias)
          format: int32
          enum:
          - 90900002
          - 90900003
          - 90900004
        message:
          type: string
          description: Error information
          example: The list of alarm full paths cannot be empty 
        data:
          type: object
        detail:
          type: string
          description: Error details
          example: string
    inline_response_400_8:
      type: object
      properties:
        code:
          type: integer
          description: |
            Error code
            * 10001001 Undefined exception
            * 10001013 Not compliant with specifications
          example: 10001013
          enum:
          - 10001001
          - 10001013
        message:
          type: string
          description: Error information
          example: The maximum number of namespaces is 100.
        detail:
          type: string
          description: Error details
    inline_response_400_9:
      type: object
      properties:
        code:
          type: integer
          description: |
            Error code
            * 10001001 Undefined exception
            * 10001009 Data does not exist
            * 10001013 Not compliant with specifications
          example: 10001009
          enum:
          - 10001001
          - 10001009
          - 10001013
        message:
          type: string
          description: Error information
          example: the template to while fullName(namespace.enName):xx.xx belongs was not found.
        detail:
          type: string
          description: Error details
    inline_response_400_10:
      type: object
      properties:
        code:
          type: integer
          description: |
            Error code
            * 10001001 Undefined exception
            * 10001009 Data does not exist
            * 10001013 Not compliant with specifications
          example: 10001009
          enum:
          - 10001001
          - 10001009
          - 10001013
        message:
          type: string
          description: Error information
          example: the entity to while enName:xxxx belongs was not found.
        detail:
          type: string
          description: Error details
    inline_response_400_11:
      type: object
      properties:
        code:
          type: integer
          description: |
            Error code
            * 10001001 Undefined exception
            * 10001009 Data does not exist
            * 10001012 Repeated fields
            * 10001013 Not compliant with specifications
          example: 10001009
          enum:
          - 10001001
          - 10001009
          - 10001012
          - 10001013
        message:
          type: string
          description: Error information
          example: the entity to while enName:xxxx belongs was not found.
        detail:
          type: string
          description: Error details
    inline_response_400_12:
      type: object
      properties:
        code:
          type: integer
          description: |
            Error code
            * 10001001 Undefined exception
            * 10001009 Data does not exist
            * 10001013 Parameters are not compliant with specifications
            * 10001033 Import/Export task limit exceeded
            * 10001034 Import/Export task in progress
          format: int32
          example: 10001009
          enum:
          - 10001001
          - 10001009
          - 10001013
          - 10001033
          - 10001034
        data:
          type: object
          description: Return data
        message:
          type: string
          description: Error information
          example: appId:App_1af1a690b81b7cabc2f5fde0b00d15ads对应的App未找到.
        detail:
          type: string
          description: Error details
        context:
          type: object
          description: Error context
        targetService:
          type: string
          description: Service modules that generate errors
          example: oodm
    inline_response_400_13:
      type: object
      properties:
        code:
          type: integer
          description: |
            Error code
            * 10001001 Undefined exception
            * 10001009 Data does not exist
            * 10001013 Parameters are not compliant with specifications
            * 10001032 Export task in progress or fail
          format: int32
          example: 10001009
          enum:
          - 10001001
          - 10001009
          - 10001013
          - 10001032
        data:
          type: object
          description: Return data
        message:
          type: string
          description: Error information
          example: taskId:ac063e0a4ecb439186f6ae7eb9223842对应的task未找到.
        detail:
          type: string
          description: Error details
        context:
          type: object
          description: Error context
        targetService:
          type: string
          description: Service modules that generate errors
          example: oodm
    inline_response_400_14:
      type: object
      properties:
        code:
          type: integer
          description: |
            Error code
            * 10001001 Undefined exception
            * 10001009 Data does not exist
            * 10001013 Parameters are not compliant with specifications
          format: int32
          example: 10001009
          enum:
          - 10001001
          - 10001009
          - 10001013
        data:
          type: object
          description: Return data
        message:
          type: string
          description: Error information
          example: taskId:ac063e0a4ecb439186f6ae7eb9223842对应的任务未找到.
        detail:
          type: string
          description: Error details
        context:
          type: object
          description: Error context
        targetService:
          type: string
          description: Service modules that generate errors
          example: oodm
  securitySchemes:
    Sign:
      type: apiKey
      name: Authorization
      in: header
